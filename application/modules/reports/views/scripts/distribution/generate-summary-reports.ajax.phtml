<?php
require_once('tcpdf/tcpdf.php');

$configFile = APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.local.ini";
if (!is_file($configFile)) {
    $configFile = APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini";
}

$config = new Zend_Config_Ini($configFile, APPLICATION_ENV);
$fileSafeShipmentCode = str_replace( ' ', '-', str_replace(array_merge(
        array_map('chr', range(0, 31)),
        array('<', '>', ':', '"', '/', '\\', '|', '?', '*')
        ), '', $this->result['shipment']['shipment_code']));
$reportsFolderPath = UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports';
$shipmentFolderPath = $reportsFolderPath . DIRECTORY_SEPARATOR . $fileSafeShipmentCode;
if ($this->result['shipment'] != "") {
    if (!file_exists($reportsFolderPath) && !is_dir($reportsFolderPath)) {
        mkdir($reportsFolderPath);
    }
    if (!file_exists($shipmentFolderPath) && !is_dir($shipmentFolderPath)) {
        mkdir($shipmentFolderPath);
    }

    class MYPDF extends TCPDF
    {
        public function setSchemeName($header, $logo, $logoRight, $comingFrom)
        {
            $this->header = $header;
            $this->logo = $logo;
            $this->logoRight = $logoRight;
            $this->comingFrom = $comingFrom;
        }

        //Page header
        public function Header()
        {
            $this->writeHTMLCell(0, 10, 15, 20, '<h3 style="background-color:#000000;color:#ffffff;font-weight: bold;text-align:center;">CDC/ILB XPERT TB PROFICIENCY TESTING PROGRAM: FINAL SUMMARY REPORT</h3>', 0, 0, 0, true, 'J', true);
        }

        // Page footer
        public function Footer()
        {
            // Position at 15 mm from bottom
            $this->SetY(-15);
            // Set font
            $this->SetFont('Helvetica', '', 8);
            $this->Cell(30, 10, 'Form: ILB-500-F29A', 0, false, 'L', 0, '', 0, false, 'T', 'M');
            $this->Cell(120, 10, 'Issuing Authority: David Turgeon, PhD', 0, false, 'C', 0, '', 0, false, 'T', 'M');
            $this->Cell(30, 10, 'Effective Date: March 2022', 0, false, 'R', 0, '', 0, false, 'T', 'M');
            $this->SetY(-10);
            $this->Cell(0, 10, sprintf('Page %s / %s', $this->getAliasNumPage(), $this->getAliasNbPages()), 0, false, 'C', 0, '', 0, false, 'T', 'M');
        }
    }

    $pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

    $pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

    $pdf->setHeaderFont(array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
    $pdf->setFooterFont(array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

    $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

    $pdf->SetMargins(PDF_MARGIN_LEFT, 30, PDF_MARGIN_RIGHT);
    $pdf->SetHeaderMargin(1);
    $pdf->SetFooterMargin(1);

    $pdf->SetAutoPageBreak(TRUE, 15);

    $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

    $pdf->setSchemeName($this->header, $this->logo, $this->logoRight, $this->comingFrom);

    $pdf->AddPage();
    $pdf->SetFont('Helvetica', '', 8);
    $labInfo = '<h3 style="width:100%;text-align:center;margin: 0;padding:0;">' . $this->result['shipment']['distribution_code'] . '</h3>';
    $labInfo .= '<p style="width:100%;font-size:10pt;">Xpert TB Proficiency Testing (XTPT) Program Dried Tube Specimen (DTS) panels are prepared in house at the US Centers for Disease Control and Prevention (CDC), Center for Global Health, Division of Global HIV and TB, International Laboratory Branch (ILB) from known, well-characterized, heat-inactivated mycobacterial isolates. All panels are designed to cover the range of possible Xpert MTB/RIF or Xpert MTB/RIF Ultra (Ultra) qualitative results but are not specific to semi-quantitative result ranges. All samples are verified to be non-viable (no growth in inactivation verification culture), 100% accurate (yielding expected test result), and precise (within 3 standard deviations (SD) of the mean for Xpert MTB/RIF Probe A cycle threshold). Verification sampling is determined using a statistical sample size collection tool and the calculated historical variance (SD).</p>';
    $labInfo .= '<p style="font-size:10pt;"><strong style="font-size:10pt;">Expected Results</strong></p>';
    $labInfo .= '<table cellpadding="2" style="width:100%;font-size:8pt;">';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="border:solid 1px #000000;width:10%;"><strong style="font-size:10pt;width:100%;text-align:center;">Sample ID</strong></td>';
    $labInfo .= '	     <td style="border:solid 1px #000000;width:40%;"><strong style="font-size:10pt;width:100%;text-align:center;">Sample Content</strong></td>';
    $labInfo .= '	     <td style="border:solid 1px #000000;width:25%;"><strong style="font-size:10pt;width:100%;text-align:center;">Expected TB Detection Result</strong></td>';
    $labInfo .= '	     <td style="border:solid 1px #000000;width:25%;"><strong style="font-size:10pt;width:100%;text-align:center;">Expected Rifampicin Resistance Detection</strong></td>';
    $labInfo .= '    </tr>';
    foreach ($this->result['referenceResults'] as $referenceResult) {
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="border:solid 1px #000000;text-align:center;">' . $referenceResult['sample_label'] . '</td>';
        $labInfo .= '	     <td style="border:solid 1px #000000;text-align:center;">' . $referenceResult['sample_content'] . '</td>';
        $labInfo .= '	     <td style="border:solid 1px #000000;text-align:center;">' . $referenceResult['expected_tb_detection_result'] . '</td>';
        $labInfo .= '	     <td style="border:solid 1px #000000;text-align:center;">' . $referenceResult['expected_rif_detection_result'] . '</td>';
        $labInfo .= '    </tr>';
    }
    $labInfo .= '</table><br /><br />';
    $labInfo .= '<table cellpadding="2" style="border:none;width:100%;">';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="border:none;width:50%;"><strong style="font-size:10pt;width:100%;">Enrollment, Participation and Performance</strong></td>';
    $labInfo .= '	     <td style="border:none;width:50%;"><strong style="font-size:10pt;width:100%;">Test Method Reported by Sites</strong></td>';
    $labInfo .= '    </tr>';
    $labInfo .= '</table><br />';
    $pdf->writeHTML($labInfo, true, false, true, false, '');

    $participationYAxisMultiplier = 1;
    if ($this->result['aggregates']['enrolled'] > 10) {
        $participationYAxisMultiplier = ceil($this->result['aggregates']['enrolled'] / 10);
    }
    if ($this->result['aggregates']['enrolled'] > 100) {
        $enrolledString = strval($this->result['aggregates']['enrolled']);
        $upperRange = intval(str_pad(strval(intval(substr($enrolledString, 0, 2)) + 1), strlen($enrolledString), "0", STR_PAD_RIGHT));
        if (substr($enrolledString, 0, 1) == "9") {
            $upperRange = intval(str_pad("1", strlen($enrolledString) + 1, "0", STR_PAD_RIGHT));
        }
        $participationYAxisMultiplier = $upperRange / 10;
    }

    $testMethodYAxisMultiplier = 1;
    $largerTestMethod = $this->result['aggregates']['mtb_rif'];
    if ($this->result['aggregates']['mtb_rif_ultra'] > $largerTestMethod) {
        $largerTestMethod = $this->result['aggregates']['mtb_rif_ultra'];
    }
    if ($largerTestMethod > 10) {
        $testMethodYAxisMultiplier = ceil($largerTestMethod / 10);
    }
    if ($largerTestMethod > 100) {
        $largerTestMethodString = strval($largerTestMethod);
        $upperRange = intval(str_pad(strval(intval(substr($largerTestMethodString, 0, 2)) + 1), strlen($largerTestMethodString), "0", STR_PAD_RIGHT));
        if (substr($largerTestMethodString, 0, 1) == "9") {
            $upperRange = intval(str_pad("1", strlen($largerTestMethodString) + 1, "0", STR_PAD_RIGHT));
        }
        $testMethodYAxisMultiplier = $upperRange / 10;
    }
    $participationSvg = '<?xml version="1.0" encoding="UTF-8"?>';
    $participationSvg .= '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 180">';
    $participationSvg .= '    <rect width="190" height="180" x="0" y="0" stroke="#E4E4E4" stroke-width="1" fill="white" />';
    $participationSvg .= '    <text x="95" y="12" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:8pt">XTPT Site Enrollment,</text>';
    $participationSvg .= '    <text x="95" y="24" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:8pt">Participation, and Performance for</text>';
    $participationSvg .= '    <text x="95" y="36" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:8pt">' . $this->result['shipment']['shipment_code'] . '</text>';
    for ($yAxisIncrement = 5; $yAxisIncrement >= 0; $yAxisIncrement--) {
        $participationSvg .= '    <text x="15" y="' . (152 - ($yAxisIncrement * 20)) . '" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">' . ($yAxisIncrement * $participationYAxisMultiplier * 2) . '</text>';
        $participationSvg .= '    <line x1="30" x2="180" y1="' . (150 - ($yAxisIncrement * 20)) . '" y2="' . (150 - ($yAxisIncrement * 20)) . '" stroke="#E4E4E4" stroke-width="1" />';
    }
    $participationSvg .= '    <text x="10" y="100" transform="rotate(-90, 10, 100)" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Number of sites</text>';
    $participationSvg .= '    <rect width="30" height="' . (($this->result['aggregates']['enrolled'] / ($participationYAxisMultiplier * 10)) * 100) . '" x="40" y="' . (100 - (($this->result['aggregates']['enrolled'] / ($participationYAxisMultiplier * 10)) * 100) + 50) . '" fill="#4F81BD" />';
    $participationSvg .= '    <text x="55" ';
    if ($this->result['aggregates']['enrolled'] < $participationYAxisMultiplier) {
        $participationSvg .= 'y="' . (98 - (($this->result['aggregates']['enrolled'] / ($participationYAxisMultiplier * 10)) * 100) + 50) . '" dominant-baseline="text-top" text-anchor="middle" style="fill:#666666;';
    } else {
        $participationSvg .= 'y="' . (107 - (($this->result['aggregates']['enrolled'] / ($participationYAxisMultiplier * 10)) * 100) + 50) . '" dominant-baseline="hanging" text-anchor="middle" style="fill:#FFFFFF;';
    }
    $participationSvg .= 'font-family:helvetica;font-size:5pt">'.round($this->result['aggregates']['enrolled'], 1).'</text>';
    $participationSvg .= '    <text x="55" y="158" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Enrolled Sites</text>';
    $participationSvg .= '    <rect width="30" height="' . (($this->result['aggregates']['participated'] / ($participationYAxisMultiplier * 10)) * 100) . '" x="90" y="' . (100 - (($this->result['aggregates']['participated'] / ($participationYAxisMultiplier * 10)) * 100) + 50) . '" fill="#4F81BD" />';
    $participationSvg .= '    <text x="105" ';
    if ($this->result['aggregates']['participated'] < $participationYAxisMultiplier) {
        $participationSvg .= 'y="' . (98 - (($this->result['aggregates']['participated'] / ($participationYAxisMultiplier * 10)) * 100) + 50) . '" dominant-baseline="text-top" text-anchor="middle" style="fill:#666666;';
    } else {
        $participationSvg .= 'y="' . (107 - (($this->result['aggregates']['participated'] / ($participationYAxisMultiplier * 10)) * 100) + 50) . '" dominant-baseline="hanging" text-anchor="middle" style="fill:#FFFFFF;';
    }
    $participationSvg .= 'font-family:helvetica;font-size:5pt">'.round($this->result['aggregates']['participated'], 1).'</text>';
    $participationSvg .= '    <text x="105" y="158" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Participating</text>';
    $participationSvg .= '    <text x="105" y="165" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Sites</text>';
    $participationSvg .= '    <rect width="30" height="' . (($this->result['aggregates']['scored_100_percent'] / ($participationYAxisMultiplier * 10)) * 100) . '" x="140" y="' . (100 - (($this->result['aggregates']['scored_100_percent'] / ($participationYAxisMultiplier * 10)) * 100) + 50) . '" fill="#4F81BD" />';
    $participationSvg .= '    <text x="155" ';
    if ($this->result['aggregates']['participated'] < $participationYAxisMultiplier) {
        $participationSvg .= 'y="' . (98 - (($this->result['aggregates']['scored_100_percent'] / ($participationYAxisMultiplier * 10)) * 100) + 50) . '" dominant-baseline="text-top" text-anchor="middle" style="fill:#666666;';
    } else {
        $participationSvg .= 'y="' . (107 - (($this->result['aggregates']['scored_100_percent'] / ($participationYAxisMultiplier * 10)) * 100) + 50) . '" dominant-baseline="hanging" text-anchor="middle" style="fill:#FFFFFF;';
    }
    $participationSvg .= 'font-family:helvetica;font-size:5pt">'.round($this->result['aggregates']['scored_100_percent'], 1).'</text>';
    $participationSvg .= '    <text x="155" y="158" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Sites Scoring</text>';
    $participationSvg .= '    <text x="155" y="165" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">100%</text>';
    $participationSvg .= '    <rect width="190" height="180" x="200" y="0" stroke="#E4E4E4" stroke-width="1" fill="white" />';
    $participationSvg .= '    <text x="295" y="12" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:8pt">Test Method</text>';
    for ($yAxisIncrement = 5; $yAxisIncrement >= 0; $yAxisIncrement--) {
        $participationSvg .= '    <text x="215" y="' . (152 - ($yAxisIncrement * 20)) . '" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">' . ($yAxisIncrement * $testMethodYAxisMultiplier * 2) . '</text>';
        $participationSvg .= '    <line x1="230" x2="380" y1="' . (150 - ($yAxisIncrement * 20)) . '" y2="' . (150 - ($yAxisIncrement * 20)) . '" stroke="#E4E4E4" stroke-width="1" />';
    }
    $participationSvg .= '    <text x="210" y="100" transform="rotate(-90, 210, 100)" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Number of sites</text>';
    $participationSvg .= '    <rect width="30" height="' . (($this->result['aggregates']['mtb_rif'] / ($testMethodYAxisMultiplier * 10)) * 100) . '" x="250" y="' . (100 - (($this->result['aggregates']['mtb_rif'] / ($testMethodYAxisMultiplier * 10)) * 100) + 50) . '" fill="#4F81BD" />';
    $participationSvg .= '    <text x="265" ';
    if ($this->result['aggregates']['mtb_rif'] < $testMethodYAxisMultiplier) {
        $participationSvg .= 'y="' . (98 - (($this->result['aggregates']['mtb_rif'] / ($testMethodYAxisMultiplier * 10)) * 100) + 50) . '" dominant-baseline="text-top" text-anchor="middle" style="fill:#666666;';
    } else {
        $participationSvg .= 'y="' . (107 - (($this->result['aggregates']['mtb_rif'] / ($testMethodYAxisMultiplier * 10)) * 100) + 50) . '" dominant-baseline="hanging" text-anchor="middle" style="fill:#FFFFFF;';
    }
    $participationSvg .= 'font-family:helvetica;font-size:5pt">'.round($this->result['aggregates']['mtb_rif'], 1).'</text>';
    $participationSvg .= '    <text x="265" y="158" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Sites testing</text>';
    $participationSvg .= '    <text x="265" y="165" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Xpert MTB/RIF</text>';
    $participationSvg .= '    <rect width="30" height="' . (($this->result['aggregates']['mtb_rif_ultra'] / ($testMethodYAxisMultiplier * 10)) * 100) . '" x="325" y="' . (100 - (($this->result['aggregates']['mtb_rif_ultra'] / ($testMethodYAxisMultiplier * 10)) * 100) + 50) . '" fill="#4F81BD" />';
    $participationSvg .= '    <text x="340" ';
    if ($this->result['aggregates']['mtb_rif_ultra'] < $testMethodYAxisMultiplier) {
        $participationSvg .= 'y="' . (98 - (($this->result['aggregates']['mtb_rif_ultra'] / ($testMethodYAxisMultiplier * 10)) * 100) + 50) . '" dominant-baseline="text-top" text-anchor="middle" style="fill:#666666;';
    } else {
        $participationSvg .= 'y="' . (107 - (($this->result['aggregates']['mtb_rif_ultra'] / ($testMethodYAxisMultiplier * 10)) * 100) + 50) . '" dominant-baseline="hanging" text-anchor="middle" style="fill:#FFFFFF;';
    }
    $participationSvg .= 'font-family:helvetica;font-size:5pt">'.round($this->result['aggregates']['mtb_rif_ultra'], 1).'</text>';
    $participationSvg .= '    <text x="340" y="158" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Sites testing</text>';
    $participationSvg .= '    <text x="340" y="165" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Xpert Ultra</text>';
    $participationSvg .= '</svg>';
    $pdf->ImageSVG('@' . $participationSvg, 15, 145, 180, 90, '', '', '', 0, false);
    $pdf->AddPage();

    $labInfo = '<table cellpadding="3" style="width:100%;font-size:8pt;">';
    $labInfo .= '    <tr style="background-color:#777777;color:#ffffff;">';
    $labInfo .= '	     <td style="text-align:center;border-top:solid 10px #000000;border-bottom:solid 10px #000000;" colspan="' . (count($this->result['mtbRifReportSummary']) + 1) . '"><strong>Summary of All Reporting Sites Testing Xpert MTB/RIF</strong></td>';
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;"></td>';
    foreach ($this->result['mtbRifReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifReportSummary'])) . '%;text-align:center;"><strong>' . $sampleSummary['sample_label'] . '</strong>';
        if ($sampleSummary['ref_mtb_rif_is_excluded'] == 'yes') {
            if ($sampleSummary['ref_mtb_rif_is_exempt'] == 'yes') {
                $labInfo .= '<br /><span style="color:#ffa500;">(Exempt)</span>';
            } else {
                $labInfo .= '<br /><span style="color:#ff0000;">(Excluded)</span>';
            }
        }
        $labInfo .= '</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Total number of reporting sites</td>';
    foreach ($this->result['mtbRifReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifReportSummary'])) . '%;text-align:center;">' . $sampleSummary['no_of_responses'] . '</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="background-color:#cccccc;width:100%;" colspan="' . (count($this->result['mtbRifReportSummary']) + 1) . '"><strong>TB Detection</strong></td>';
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites detecting TB (%)</td>';
    foreach ($this->result['mtbRifReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifReportSummary'])) . '%;text-align:center;">' . $sampleSummary['mtb_detected'] . ' (' . round(($sampleSummary['mtb_detected'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites not detecting TB (%)</td>';
    foreach ($this->result['mtbRifReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifReportSummary'])) . '%;text-align:center;">' . $sampleSummary['mtb_not_detected'] . ' (' . round(($sampleSummary['mtb_not_detected'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites reporting uninterpretable TB result*(%)</td>';
    foreach ($this->result['mtbRifReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifReportSummary'])) . '%;text-align:center;">' . $sampleSummary['mtb_uninterpretable'] . ' (' . round(($sampleSummary['mtb_uninterpretable'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="background-color:#cccccc;width:100%;" colspan="' . (count($this->result['mtbRifReportSummary']) + 1) . '"><strong>RIF Detection</strong></td>';
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites detecting Rif resistance (%)</td>';
    foreach ($this->result['mtbRifReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifReportSummary'])) . '%;text-align:center;">' . $sampleSummary['rif_detected'] . ' (' . round(($sampleSummary['rif_detected'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites not detecting Rif resistance (%)</td>';
    foreach ($this->result['mtbRifReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifReportSummary'])) . '%;text-align:center;">' . $sampleSummary['rif_not_detected'] . ' (' . round(($sampleSummary['rif_not_detected'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites reporting indeterminate Rif result (%)</td>';
    foreach ($this->result['mtbRifReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifReportSummary'])) . '%;text-align:center;">' . $sampleSummary['rif_indeterminate'] . ' (' . round(($sampleSummary['rif_indeterminate'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites reporting uninterpretable Rif result*(%)</td>';
    foreach ($this->result['mtbRifReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifReportSummary'])) . '%;text-align:center;">' . $sampleSummary['rif_uninterpretable'] . ' (' . round(($sampleSummary['rif_uninterpretable'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '</table><br /><br />';
    if (isset($this->result['mtbRifUltraReportSummary']) && count($this->result['mtbRifUltraReportSummary']) > 0) {
        $labInfo .= '<table cellpadding="3" style="width:100%;font-size:8pt;">';
        $labInfo .= '    <tr style="background-color:#777777;color:#ffffff;">';
        $labInfo .= '	     <td style="text-align:center;border-top:solid 10px #000000;border-bottom:solid 10px #000000;" colspan="' . (count($this->result['mtbRifUltraReportSummary']) + 1) . '"><strong>Summary of All Reporting Sites Testing Xpert MTB/RIF Ultra</strong></td>';
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="width:40%;"></td>';
        foreach ($this->result['mtbRifUltraReportSummary'] as $sampleSummary) {
            $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifUltraReportSummary'])) . '%;text-align:center;"><strong>' . $sampleSummary['sample_label'] . '</strong>';
            if ($sampleSummary['ref_ultra_is_excluded'] == 'yes') {
                if ($sampleSummary['ref_ultra_is_exempt'] == 'yes') {
                    $labInfo .= '<br /><span style="color:#ffa500;">(Exempt)</span>';
                } else {
                    $labInfo .= '<br /><span style="color:#ff0000;">(Excluded)</span>';
                }
            }
            $labInfo .= '</td>';
        }
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="width:40%;">Total number of reporting sites</td>';
        foreach ($this->result['mtbRifUltraReportSummary'] as $sampleSummary) {
            $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifUltraReportSummary'])) . '%;text-align:center;">' . $sampleSummary['no_of_responses'] . '</td>';
        }
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="background-color:#cccccc;width:100%;" colspan="' . (count($this->result['mtbRifUltraReportSummary']) + 1) . '"><strong>TB Detection</strong></td>';
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="width:40%;">Sites detecting TB (%)</td>';
        foreach ($this->result['mtbRifUltraReportSummary'] as $sampleSummary) {
            $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifUltraReportSummary'])) . '%;text-align:center;">' . $sampleSummary['mtb_detected'] . ' (' . round(($sampleSummary['mtb_detected'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
        }
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="width:40%;">Sites not detecting TB (%)</td>';
        foreach ($this->result['mtbRifUltraReportSummary'] as $sampleSummary) {
            $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifUltraReportSummary'])) . '%;text-align:center;">' . $sampleSummary['mtb_not_detected'] . ' (' . round(($sampleSummary['mtb_not_detected'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
        }
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="width:40%;">Sites reporting uninterpretable TB result*(%)</td>';
        foreach ($this->result['mtbRifUltraReportSummary'] as $sampleSummary) {
            $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifUltraReportSummary'])) . '%;text-align:center;">' . $sampleSummary['mtb_uninterpretable'] . ' (' . round(($sampleSummary['mtb_uninterpretable'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
        }
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="background-color:#cccccc;width:100%;" colspan="' . (count($this->result['mtbRifUltraReportSummary']) + 1) . '"><strong>RIF Detection</strong></td>';
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="width:40%;">Sites detecting Rif resistance (%)</td>';
        foreach ($this->result['mtbRifUltraReportSummary'] as $sampleSummary) {
            $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifUltraReportSummary'])) . '%;text-align:center;">' . $sampleSummary['rif_detected'] . ' (' . round(($sampleSummary['rif_detected'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
        }
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="width:40%;">Sites not detecting Rif resistance (%)</td>';
        foreach ($this->result['mtbRifUltraReportSummary'] as $sampleSummary) {
            $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifUltraReportSummary'])) . '%;text-align:center;">' . $sampleSummary['rif_not_detected'] . ' (' . round(($sampleSummary['rif_not_detected'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
        }
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="width:40%;">Sites reporting indeterminate Rif result (%)</td>';
        foreach ($this->result['mtbRifUltraReportSummary'] as $sampleSummary) {
            $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifUltraReportSummary'])) . '%;text-align:center;">' . $sampleSummary['rif_indeterminate'] . ' (' . round(($sampleSummary['rif_indeterminate'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
        }
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="width:40%;">Sites reporting uninterpretable Rif result*(%)</td>';
        foreach ($this->result['mtbRifUltraReportSummary'] as $sampleSummary) {
            $labInfo .= '	     <td style="width:' . (60 / count($this->result['mtbRifUltraReportSummary'])) . '%;text-align:center;">' . $sampleSummary['rif_uninterpretable'] . ' (' . round(($sampleSummary['rif_uninterpretable'] / $sampleSummary['no_of_responses']) * 100, 1) . '%)</td>';
        }
        $labInfo .= '    </tr>';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="width:100%;" colspan="' . (count($this->result['mtbRifUltraReportSummary']) + 1) . '">* Uninterpretable result = invalid, error, or no result</td>';
        $labInfo .= '    </tr>';
        $labInfo .= '</table><br />';
    }
    if (isset($this->result['shipment']["shipment_comment"]) && $this->result['shipment']["shipment_comment"] != '') {
        $labInfo .= '<p style="font-weight: bold;">Additional Information:</p>';
    }
    $pdf->writeHTML($labInfo, true, false, true, false, '');
    $pdf->MultiCell(
        180,
        100,
        $this->result['shipment']["shipment_comment"],
        0,
        'L',
        false,
        1,
        '',
        '',
        true,
        0,
        false,
        true,
        100,
        'T',
        false
    );
    $pdf->AddPage();

    $pdf->writeHTML('<p style="font-size:10pt;"><strong style="font-size:10pt;">Panel Performance</strong></p>', true, false, true, false, '');
    $panelPerformanceMtbRifSvg = '<?xml version="1.0" encoding="UTF-8"?>';
    $panelPerformanceMtbRifSvg .= '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 300">';
    $panelPerformanceMtbRifSvg .= '    <rect width="300" height="300" x="0" y="0" stroke="#E4E4E4" stroke-width="1" fill="white" />';
    $panelPerformanceMtbRifSvg .= '    <text x="150" y="12" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:6pt">'.$this->result['shipment']['distribution_code'].' Panel Performance Determined by Testing with Xpert MTB/RIF</text>';
    $panelPerformanceMtbRifSvg .= '    <text x="15" y="150" transform="rotate(-90, 15, 150)" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:6pt">Cycle Thresholds (Ct)</text>';
    $ctMaxYAxisValueMtbRif = 0;
    foreach ($this->result['mtbRifReportSummary'] as $sampleSummary) {
        if ($sampleSummary['ref_expected_ct'] > 0) {
            if ($ctMaxYAxisValueMtbRif < $sampleSummary['ref_expected_ct']) {
                $ctMaxYAxisValueMtbRif = $sampleSummary['ref_expected_ct'];
            }
            if ($ctMaxYAxisValueMtbRif < $sampleSummary['average_ct']) {
                $ctMaxYAxisValueMtbRif = $sampleSummary['average_ct'];
            }
        }
    }
    if ($ctMaxYAxisValueMtbRif == 0) {
        $ctMaxYAxisValueMtbRif = 30;
    } else {
        $ctMaxYAxisValueMtbRif += 5;
    }
    $ctMaxYAxisValueMtbRif = ceil($ctMaxYAxisValueMtbRif / 5 ) * 5;
    $yAxis1UnitMtbRif = 220 / $ctMaxYAxisValueMtbRif;
    for ($yAxisIncrement = $ctMaxYAxisValueMtbRif; $yAxisIncrement >= 0; $yAxisIncrement = $yAxisIncrement - 5) {
        $panelPerformanceMtbRifSvg .= '    <text x="25" y="'.(262 - ($yAxisIncrement * $yAxis1UnitMtbRif)).'" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:4pt">'.$yAxisIncrement.'</text>';
        $panelPerformanceMtbRifSvg .= '    <line x1="35" x2="290" y1="'.(260 - ($yAxisIncrement * $yAxis1UnitMtbRif)).'" y2="'.(260 - ($yAxisIncrement * $yAxis1UnitMtbRif)).'" stroke="#E4E4E4" stroke-width="1" />';
    }
    $barSpaceMtbRif = (290 - 35) / count($this->result['mtbRifReportSummary']);
    $barWidthMtbRif = $barSpaceMtbRif * 0.35;
    $sampleIndexMtbRif = 0;
    foreach ($this->result['mtbRifReportSummary'] as $sampleSummary) {
        $barSpaceCenter = (35 + ($sampleIndexMtbRif * $barSpaceMtbRif) + ($barSpaceMtbRif * 0.15) + $barWidthMtbRif);
        $panelPerformanceMtbRifSvg .= '    <text x="'.$barSpaceCenter.'" y="270" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">'.$sampleSummary['sample_label'].'</text>';
        if ($sampleSummary['ref_mtb_rif_is_excluded'] == 'yes') {
            $panelPerformanceMtbRifSvg .= '    <text x="' . $barSpaceCenter . '" y="275" dominant-baseline="middle" text-anchor="middle" style="fill:#';
            if ($sampleSummary['ref_mtb_rif_is_exempt'] == 'yes') {
                $panelPerformanceMtbRifSvg .= 'ffa500';
            } else {
                $panelPerformanceMtbRifSvg .= 'ff0000';
            }
            $panelPerformanceMtbRifSvg .= ';font-family:helvetica;font-size:3.5pt">(';

            if ($sampleSummary['ref_mtb_rif_is_exempt'] == 'yes') {
                $panelPerformanceMtbRifSvg .= 'Exempt';
            } else {
                $panelPerformanceMtbRifSvg .= 'Excluded';
            }
            $panelPerformanceMtbRifSvg .= ')</text>';
        }
        if ($sampleSummary['ref_expected_ct'] > 0) {
            $panelPerformanceMtbRifSvg .= '    <rect width="'.$barWidthMtbRif.'" height="' . ($sampleSummary['ref_expected_ct'] * $yAxis1UnitMtbRif) . '" x="'.(35 + ($sampleIndexMtbRif * $barSpaceMtbRif) + ($barSpaceMtbRif * 0.15)).'" y="'.((($ctMaxYAxisValueMtbRif - $sampleSummary['ref_expected_ct']) * $yAxis1UnitMtbRif) + 40).'" fill="#4F81BD" />';
            $panelPerformanceMtbRifSvg .= '    <rect width="'.$barWidthMtbRif.'" height="' . ($sampleSummary['average_ct'] * $yAxis1UnitMtbRif) . '" x="'.$barSpaceCenter.'" y="'.((($ctMaxYAxisValueMtbRif - $sampleSummary['average_ct']) * $yAxis1UnitMtbRif) + 40).'" fill="#C0504D" />';
            if ($sampleSummary['average_ct'] > $sampleSummary['ref_expected_ct']) {
                $panelPerformanceMtbRifSvg .= '    <polygon points="'.$barSpaceCenter.','.(40 + $yAxis1UnitMtbRif).' '.($barSpaceCenter - $barWidthMtbRif).','.(40 + ($yAxis1UnitMtbRif * 4)).' '.($barSpaceCenter + $barWidthMtbRif).','.(40 + ($yAxis1UnitMtbRif * 4)).'" fill="#4F81BD" stroke="#385D8A" stroke-width="1" />';
                $panelPerformanceMtbRifSvg .= '    <text x="'.$barSpaceCenter.'" y="'.(40 + ($yAxis1UnitMtbRif * 3)).'" text-anchor="middle" style="fill:#ffffff;font-family:helvetica;font-size:4pt;font-weight:bold;">'.abs(round($sampleSummary['average_ct'] - $sampleSummary['ref_expected_ct'], 1)).'</text>';
            } else if ($sampleSummary['ref_expected_ct'] > $sampleSummary['average_ct']) {
                $panelPerformanceMtbRifSvg .= '    <polygon points="'.($barSpaceCenter - $barWidthMtbRif).','.(40 + $yAxis1UnitMtbRif).' '.$barSpaceCenter.','.(40 + ($yAxis1UnitMtbRif * 4)).' '.($barSpaceCenter + $barWidthMtbRif).','.(40 + $yAxis1UnitMtbRif).'" fill="#C0504D" stroke="#BF1411" stroke-width="1" />';
                $panelPerformanceMtbRifSvg .= '    <text x="'.$barSpaceCenter.'" y="'.(40 + ($yAxis1UnitMtbRif * 2.5)).'" text-anchor="middle" style="fill:#ffffff;font-family:helvetica;font-size:4pt;font-weight:bold;">'.abs(round($sampleSummary['average_ct'] - $sampleSummary['ref_expected_ct'], 1)).'</text>';
            }
            $panelPerformanceMtbRifSvg .= '    <text x="'.(44 + ($sampleIndexMtbRif * $barSpaceMtbRif) + ($barSpaceMtbRif * 0.15)).'" y="' . (267 - ($sampleSummary['ref_expected_ct'] * $yAxis1UnitMtbRif)) . '" dominant-baseline="hanging" text-anchor="middle" style="fill:#FFFFFF;font-family:helvetica;font-size:5pt">'.round($sampleSummary['ref_expected_ct'], 1).'</text>';
            $panelPerformanceMtbRifSvg .= '    <text x="'.(9 + $barSpaceCenter).'" y="' . (267 - ($sampleSummary['average_ct'] * $yAxis1UnitMtbRif)) . '" dominant-baseline="hanging" text-anchor="middle" style="fill:#FFFFFF;font-family:helvetica;font-size:5pt">'.round($sampleSummary['average_ct'], 1).'</text>';
        }
        $sampleIndexMtbRif++;
    }
    $panelPerformanceMtbRifSvg .= '    <rect width="5" height="5" x="40" y="279" fill="#4F81BD" />';
    $panelPerformanceMtbRifSvg .= '    <text x="47" y="283" style="fill:#666666;font-family:helvetica;font-size:4pt">Expected (Validation Testing) Mean for Probe A</text>';
    $panelPerformanceMtbRifSvg .= '    <rect width="5" height="5" x="170" y="279" fill="#C0504D" />';
    $panelPerformanceMtbRifSvg .= '    <text x="177" y="283" style="fill:#666666;font-family:helvetica;font-size:4pt">Field Testing Mean for Probe A</text>';
    $panelPerformanceMtbRifSvg .= '    <polygon points="129,290 126,295 132,295" fill="#4F81BD" stroke="#385D8A" stroke-width="1" />';
    $panelPerformanceMtbRifSvg .= '    <polygon points="132,290 135,295 138,290" fill="#C0504D" stroke="#BF1411" stroke-width="1" />';
    $panelPerformanceMtbRifSvg .= '    <text x="140" y="295" style="fill:#666666;font-family:helvetica;font-size:4pt">Change in Ct (delta)</text>';
    $panelPerformanceMtbRifSvg .= '</svg>';
    $pdf->ImageSVG('@' . $panelPerformanceMtbRifSvg, 15, 35, 150, 150, '', '', '', 0, false);

    $pdf->writeHTML('<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><p style="font-size:10pt;">Xpert MTB/RIF and Ultra are both real time polymerase chain reaction (RT-PCR) assays that utilize fluorescent probes to signal presence of Mycobacterium tuberculosis complex (MTBC) DNA. Each GeneXpert instrument module detects an accumulation of fluorescent signal produced by the RT-PCR reactions over time. The cycle threshold (Ct) is defined as the number of RT-PCR cycles required for the fluorescent signal to cross the threshold needed for the instrument to determine positivity. This analysis examines the Ct for Probe A for Xpert MTB/RIF, or the first rpoB probe to be detected for Ultra, comparing the mean achieved during panel verification (CDC/ILB) prior to panel dispatch to the mean calculated from results submitted by field testing sites. An increase in Ct value represents a decrease in the quantity of MTBC DNA detected, while a decrease in Ct value represents an increase in the quantity of MTBC DNA detected.</p>', true, false, true, false, '');
    $pdf->AddPage();
    if (isset($this->result['mtbRifUltraReportSummary']) && count($this->result['mtbRifUltraReportSummary']) > 0) {
        $pdf->writeHTML('<p style="font-size:10pt;"><strong style="font-size:10pt;">Panel Performance (continued)</strong></p>', true, false, true, false, '');
        $panelPerformanceMtbUltraSvg = '<?xml version="1.0" encoding="UTF-8"?>';
        $panelPerformanceMtbUltraSvg .= '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 300">';
        $panelPerformanceMtbUltraSvg .= '    <rect width="300" height="300" x="0" y="0" stroke="#E4E4E4" stroke-width="1" fill="white" />';
        $panelPerformanceMtbUltraSvg .= '    <text x="150" y="12" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:6pt">' . $this->result['shipment']['distribution_code'] . ' Panel Performance Determined by Testing with Xpert Ultra</text>';
        $panelPerformanceMtbUltraSvg .= '    <text x="15" y="150" transform="rotate(-90, 15, 150)" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:6pt">Cycle Thresholds (Ct)</text>';
        $ctMaxYAxisValueMtbUltra = 0;
        foreach ($this->result['mtbRifUltraReportSummary'] as $sampleSummary) {
            if ($sampleSummary['ref_expected_ct'] > 0) {
                if ($ctMaxYAxisValueMtbUltra < $sampleSummary['ref_expected_ct']) {
                    $ctMaxYAxisValueMtbUltra = $sampleSummary['ref_expected_ct'];
                }
                if ($ctMaxYAxisValueMtbUltra < $sampleSummary['average_ct']) {
                    $ctMaxYAxisValueMtbUltra = $sampleSummary['average_ct'];
                }
            }
        }
        if ($ctMaxYAxisValueMtbUltra == 0) {
            $ctMaxYAxisValueMtbUltra = 30;
        } else {
            $ctMaxYAxisValueMtbUltra += 5;
        }
        $ctMaxYAxisValueMtbUltra = ceil($ctMaxYAxisValueMtbUltra / 5) * 5;
        $yAxis1UnitMtbUltra = 220 / $ctMaxYAxisValueMtbUltra;
        for ($yAxisIncrement = $ctMaxYAxisValueMtbUltra; $yAxisIncrement >= 0; $yAxisIncrement = $yAxisIncrement - 5) {
            $panelPerformanceMtbUltraSvg .= '    <text x="25" y="' . (262 - ($yAxisIncrement * $yAxis1UnitMtbUltra)) . '" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:4pt">' . $yAxisIncrement . '</text>';
            $panelPerformanceMtbUltraSvg .= '    <line x1="35" x2="290" y1="' . (260 - ($yAxisIncrement * $yAxis1UnitMtbUltra)) . '" y2="' . (260 - ($yAxisIncrement * $yAxis1UnitMtbUltra)) . '" stroke="#E4E4E4" stroke-width="1" />';
        }
        $barSpaceMtbUltra = (290 - 35) / count($this->result['mtbRifUltraReportSummary']);
        $barWidthMtbUltra = $barSpaceMtbUltra * 0.35;
        $sampleIndexMtbUltra = 0;
        foreach ($this->result['mtbRifUltraReportSummary'] as $sampleSummary) {
            $barSpaceCenter = (35 + ($sampleIndexMtbUltra * $barSpaceMtbUltra) + ($barSpaceMtbUltra * 0.15) + $barWidthMtbUltra);
            $panelPerformanceMtbUltraSvg .= '    <text x="' . $barSpaceCenter . '" y="270" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">' . $sampleSummary['sample_label'] . '</text>';
            if ($sampleSummary['ref_ultra_is_excluded'] == 'yes') {
                $panelPerformanceMtbUltraSvg .= '    <text x="' . $barSpaceCenter . '" y="275" dominant-baseline="middle" text-anchor="middle" style="fill:#';
                $panelPerformanceMtbUltraSvg .= '    <text x="' . $barSpaceCenter . '" y="275" dominant-baseline="middle" text-anchor="middle" style="fill:#';
                if ($sampleSummary['ref_ultra_is_exempt'] == 'yes') {
                    $panelPerformanceMtbUltraSvg .= 'ffa500';
                } else {
                    $panelPerformanceMtbUltraSvg .= 'ff0000';
                }
                $panelPerformanceMtbUltraSvg .= ';font-family:helvetica;font-size:3.5pt">(';
                if ($sampleSummary['ref_ultra_is_exempt'] == 'yes') {
                    $panelPerformanceMtbUltraSvg .= 'Exempt';
                } else {
                    $panelPerformanceMtbUltraSvg .= 'Excluded';
                }
                $panelPerformanceMtbUltraSvg .= ')</text>';
            }
            if ($sampleSummary['ref_expected_ct'] > 0) {
                $panelPerformanceMtbUltraSvg .= '    <rect width="' . $barWidthMtbUltra . '" height="' . ($sampleSummary['ref_expected_ct'] * $yAxis1UnitMtbUltra) . '" x="' . (35 + ($sampleIndexMtbUltra * $barSpaceMtbUltra) + ($barSpaceMtbUltra * 0.15)) . '" y="' . ((($ctMaxYAxisValueMtbUltra - $sampleSummary['ref_expected_ct']) * $yAxis1UnitMtbUltra) + 40) . '" fill="#4F81BD" />';
                $panelPerformanceMtbUltraSvg .= '    <rect width="' . $barWidthMtbUltra . '" height="' . ($sampleSummary['average_ct'] * $yAxis1UnitMtbUltra) . '" x="' . $barSpaceCenter . '" y="' . ((($ctMaxYAxisValueMtbUltra - $sampleSummary['average_ct']) * $yAxis1UnitMtbUltra) + 40) . '" fill="#C0504D" />';
                if ($sampleSummary['average_ct'] > $sampleSummary['ref_expected_ct']) {
                    $panelPerformanceMtbUltraSvg .= '    <polygon points="' . $barSpaceCenter . ',' . (40 + $yAxis1UnitMtbUltra) . ' ' . ($barSpaceCenter - $barWidthMtbUltra) . ',' . (40 + ($yAxis1UnitMtbUltra * 4)) . ' ' . ($barSpaceCenter + $barWidthMtbUltra) . ',' . (40 + ($yAxis1UnitMtbUltra * 4)) . '" fill="#4F81BD" stroke="#385D8A" stroke-width="1" />';
                    $panelPerformanceMtbUltraSvg .= '    <text x="' . $barSpaceCenter . '" y="' . (40 + ($yAxis1UnitMtbUltra * 3)) . '" text-anchor="middle" style="fill:#ffffff;font-family:helvetica;font-size:4pt;font-weight:bold;">' . abs(round($sampleSummary['average_ct'] - $sampleSummary['ref_expected_ct'], 1)) . '</text>';
                } else if ($sampleSummary['ref_expected_ct'] > $sampleSummary['average_ct']) {
                    $panelPerformanceMtbUltraSvg .= '    <polygon points="' . ($barSpaceCenter - $barWidthMtbUltra) . ',' . (40 + $yAxis1UnitMtbUltra) . ' ' . $barSpaceCenter . ',' . (40 + ($yAxis1UnitMtbUltra * 4)) . ' ' . ($barSpaceCenter + $barWidthMtbUltra) . ',' . (40 + $yAxis1UnitMtbUltra) . '" fill="#C0504D" stroke="#BF1411" stroke-width="1" />';
                    $panelPerformanceMtbUltraSvg .= '    <text x="' . $barSpaceCenter . '" y="' . (40 + ($yAxis1UnitMtbUltra * 2.5)) . '" text-anchor="middle" style="fill:#ffffff;font-family:helvetica;font-size:4pt;font-weight:bold;">' . abs(round($sampleSummary['average_ct'] - $sampleSummary['ref_expected_ct'], 1)) . '</text>';
                }
                $panelPerformanceMtbUltraSvg .= '    <text x="'.(44 + ($sampleIndexMtbUltra * $barSpaceMtbUltra) + ($barSpaceMtbUltra * 0.15)).'" y="' . (267 - ($sampleSummary['ref_expected_ct'] * $yAxis1UnitMtbUltra)) . '" dominant-baseline="hanging" text-anchor="middle" style="fill:#FFFFFF;font-family:helvetica;font-size:5pt">'.round($sampleSummary['ref_expected_ct'], 1).'</text>';
                $panelPerformanceMtbUltraSvg .= '    <text x="'.(9 + $barSpaceCenter).'" y="' . (267 - ($sampleSummary['average_ct'] * $yAxis1UnitMtbUltra)) . '" dominant-baseline="hanging" text-anchor="middle" style="fill:#FFFFFF;font-family:helvetica;font-size:5pt">'.round($sampleSummary['average_ct'], 1).'</text>';
            }
            $sampleIndexMtbUltra++;
        }
        $panelPerformanceMtbUltraSvg .= '    <rect width="5" height="5" x="30" y="279" fill="#4F81BD" />';
        $panelPerformanceMtbUltraSvg .= '    <text x="37" y="283" style="fill:#666666;font-family:helvetica;font-size:4pt">Expected (Validation Testing) Mean for first probe detected</text>';
        $panelPerformanceMtbUltraSvg .= '    <rect width="5" height="5" x="180" y="279" fill="#C0504D" />';
        $panelPerformanceMtbUltraSvg .= '    <text x="187" y="283" style="fill:#666666;font-family:helvetica;font-size:4pt">Field Testing Mean for first probe detected</text>';
        $panelPerformanceMtbUltraSvg .= '    <polygon points="129,290 126,295 132,295" fill="#4F81BD" stroke="#385D8A" stroke-width="1" />';
        $panelPerformanceMtbUltraSvg .= '    <polygon points="132,290 135,295 138,290" fill="#C0504D" stroke="#BF1411" stroke-width="1" />';
        $panelPerformanceMtbUltraSvg .= '    <text x="140" y="295" style="fill:#666666;font-family:helvetica;font-size:4pt">Change in Ct (delta)</text>';
        $panelPerformanceMtbUltraSvg .= '</svg>';
        $pdf->ImageSVG('@' . $panelPerformanceMtbUltraSvg, 15, 35, 150, 150, '', '', '', 0, false);
    }
    $finalisedBy = '<p style="width:100%;font-size:10pt;">Report Issued by: Patricia Hall&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date:&nbsp;';
    if (trim($this->comingFrom)=="finalize") {
        $finalisedBy .= '<span style="text-decoration:underline;">'.date("d-M-Y").'</span>';
    } else {
        $finalisedBy .= '________________________';
    }
    $finalisedBy .= '</p>';

    $cdcDetails = '<div style="border:solid 1px #000000;">';
    $cdcDetails .= '    <table cellpadding="2" style="width:100%;font-size:10pt;">';
    $cdcDetails .= '        <tr>';
    $cdcDetails .= '    	     <td colspan="2" style="padding-top:0;margin-top:0;">';
    $cdcDetails .= '    	         <h3 style="line-height:4em;">Contact Information</h3>';
    $cdcDetails .= '    	         <br/><span>Xpert TB Proficiency Test Program</span>';
    $cdcDetails .= '    	         <br/><a href="mailto:xtpt@cdc.gov">xtpt@cdc.gov</a><br/>';
    $cdcDetails .= '    	     </td>';
    $cdcDetails .= '        </tr>';
    $cdcDetails .= '        <tr>';
    $cdcDetails .= '    	     <td>';
    $cdcDetails .= '    	         <br/><span style="text-decoration:underline;font-style:italic;">Kyle DeGruy</span>';
    $cdcDetails .= '    	         <br/><span>Program Coordinator, TB and Clinical Monitoring Team</span>';
    $cdcDetails .= '    	         <br/><span>International Laboratory Branch</span>';
    $cdcDetails .= '    	         <br/><span>Division of Global HIV and TB</span>';
    $cdcDetails .= '    	         <br/><span>Center for Global Health</span>';
    $cdcDetails .= '    	         <br/><span>US Centers for Disease Control and Prevention</span>';
    $cdcDetails .= '    	         <br/><a href="mailto:gsz4@cdc.gov">gsz4@cdc.gov</a>';
    $cdcDetails .= '    	     </td>';
    $cdcDetails .= '    	     <td>';
    $cdcDetails .= '    	         <br/><span style="text-decoration:underline;font-style:italic;">Patricia Hall</span>';
    $cdcDetails .= '    	         <br/><span>Team Lead, TB and Clinical Monitoring Team</span>';
    $cdcDetails .= '    	         <br/><span>International Laboratory Branch</span>';
    $cdcDetails .= '    	         <br/><span>Division of Global HIV and TB</span>';
    $cdcDetails .= '    	         <br/><span>Center for Global Health</span>';
    $cdcDetails .= '    	         <br/><span>US Centers for Disease Control and Prevention</span>';
    $cdcDetails .= '    	         <br/><a href="mailto:igg5@cdc.gov">igg5@cdc.gov</a>';
    $cdcDetails .= '    	     </td>';
    $cdcDetails .= '        </tr>';
    $cdcDetails .= '    </table>';
    $cdcDetails .= '</div>';
    $pdf->writeHTML('<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>'.$finalisedBy.$cdcDetails, true, false, true, false, '');

    // If headers User-Agent: ^Postman and X-Debug: ^preview$
    // We are using Postman to develop/debug the PDF generation
    if (
        preg_match('/^postman/i', @$_SERVER['HTTP_USER_AGENT']) &&
        preg_match('/^preview$/i', @$_SERVER['HTTP_X_DEBUG'])
    ) {
        $pdf->Output("", "I");
        exit;
    }

    $fileName = $fileSafeShipmentCode . "-summary.pdf";
    $filePath = $shipmentFolderPath . DIRECTORY_SEPARATOR . $fileName;
    $pdf->Output($filePath, "F");

    //============================================================+
    // END OF FILE
    //============================================================+
    echo "success";
}
