<?php
require_once('tcpdf/tcpdf.php');
$pdfNew = new Zend_Pdf();
$extractor = new Zend_Pdf_Resource_Extractor();
$font = Zend_Pdf_Font::fontWithName(Zend_Pdf_Font::FONT_HELVETICA);
$shipmentCode = '';


if (sizeof($this->result['shipment']) > 0) {
    $reportsFolderPath = UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports';
    if (!file_exists($reportsFolderPath) && !is_dir($reportsFolderPath)) {
        mkdir($reportsFolderPath);
    }
    class MYPDF extends TCPDF {
        public $result = array();
        public function setSchemeName($header, $logo, $logoRight, $comingFrom) {
            $this->header = $header;
            $this->logo = $logo;
            $this->logoRight = $logoRight;
            $this->comingFrom = $comingFrom;
        }

        //Page header
        public function Header() {
            $html = '<h3 style="background-color:#000000;color:#ffffff;font-weight: bold;text-align:center;"><span style="font-size:5px;"><br /></span>';
            $html .= 'CDC/ILB XPERT TB PROFICIENCY TESTING PROGRAM: INDIVIDUAL FINAL REPORT</h3>';
            $html .= '<h3 style="width:100%;text-align:center;margin:0;padding:0;">'.$this->result['distribution_code'].'</h3>';
            $html .= '<table cellpadding="2" style="width:100%;font-size:8pt;">';
            $html .= '    <tr>';
            $html .= '	     <td style="border-top:solid 10px #000000;border-bottom:solid 10px #000000;background-color:#777777;color:#ffffff;text-align:center;width:25%;"><strong>Country</strong></td>';
            $html .= '	     <td style="border-top:solid 10px #000000;border-bottom:solid 10px #000000;background-color:#777777;color:#ffffff;text-align:center;width:45%;"><strong>Testing Site</strong></td>';
            $html .= '	     <td style="border-top:solid 10px #000000;border-bottom:solid 10px #000000;background-color:#777777;color:#ffffff;text-align:center;width:15%;"><strong>PT-ID Number</strong></td>';
            $html .= '	     <td style="border-top:solid 10px #000000;border-bottom:solid 10px #000000;background-color:#777777;color:#ffffff;text-align:center;width:15%;"><strong>Page Number</strong></td>';
            $html .= '    </tr>';
            $html .= '    <tr>';
            $html .= '	     <td style="text-align:center;border-bottom:solid 10px #000000;">'.htmlspecialchars($this->result['country_name'], ENT_XML1).'</td>';
            $html .= '	     <td style="text-align:center;border-bottom:solid 10px #000000;">'.htmlspecialchars($this->result['lab_name'], ENT_XML1);
            if ($this->result['is_excluded'] == 'yes') {
                $html .= '       <span style="color:#ff0000;">(Excluded)</span>';
            }
            $html .= '       </td>';
            $html .= '	     <td style="text-align:center;border-bottom:solid 10px #000000;">'.htmlspecialchars($this->result['unique_identifier'], ENT_XML1).'</td>';
            $html .= '	     <td style="text-align:center;border-bottom:solid 10px #000000;">'.$this->getAliasNumPage().'/3</td>';
            $html .= '    </tr>';
            $html .= '</table>';
            $this->writeHTMLCell(0, 10, 15, 20, $html, 0, 0, 0, true, 'J', true);
        }

        // Page footer
        public function Footer() {
            // Position at 15 mm from bottom
            $this->SetY(-15);
            // Set font
            $this->SetFont('Helvetica', '', 8);
            $this->Cell(30, 10, 'Form: ILB-500-F29A', 0, false, 'L', 0, '', 0, false, 'T', 'M');
            $this->Cell(120, 10, 'Issuing Authority: David Turgeon, PhD', 0, false, 'C', 0, '', 0, false, 'T', 'M');
            $this->Cell(30, 10, sprintf('Effective Date: %s', date('F Y')), 0, false, 'R', 0, '', 0, false, 'T', 'M');
        }

        public function writeHTMLTogether($html, $ln=true, $fill=false, $reseth=false, $cell=false, $align='') {
            $cp =  $this->getPage();
            $this->startTransaction();

            $this->writeHTML($html, $ln, $fill, $reseth, $cell, $align);

            if ($this->getPage() > $cp) {
                $this->rollbackTransaction(true);//true is very important
                $this->AddPage();
                $this->writeHTML($html, $ln, $fill, $reseth, $cell, $align);
            } else {
                $this->commitTransaction();
            }
        }
    }

    $totalPages = count($this->result['shipment']);
    $j = 1;

    $tbResultValueMapping = array(
        'detected' => 'Detected',
        'high' => 'High',
        'medium' => 'Medium',
        'low' => 'Low',
        'veryLow' => 'Very Low',
        'trace' => 'Trace',
        'notDetected' => 'Not Detected',
        'detected' => 'Detected',
        'noResult' => 'No Result',
        'na' => 'N/A',
        'indeterminate' => 'Indeterminate',
        'invalid' => 'Invalid',
        'error' => 'Error',
        '' => ''
    );

    $attestation = '<div>';
    $attestation .= '    <h5>Documentation of Report Review</h5>';
    $attestation .= '    <p style="width:100%;font-size:10pt;">We the undersigned, have read and reviewed the above Xpert TB Proficiency Testing Individual Final Report. If the final score was less than 100%, we completed a root cause analysis.* The Individual Final Report and any attachments must be filed and retained as documentation. If needed, corrective action documentation should also be completed and filed alongside the Individual Final Report for reference.</p>';
    $attestation .= '    <p style="width:100%;font-size:10pt;">Our individual site results are confidential and are only shared with our Proficiency Test Country Coordinators (PTCC) at the National or Regional level and the testing site. Each PTCC serves as a subcontractor to the Xpert TB Proficiency Testing Program for the following duties: site enrollment, panel receipt, panel distribution to individual testing sites, result submission assistance, report distribution assistance and corrective action follow-up in accordance our country’s National TB Program guidelines. Questions or comments concerning this report may be submitted to the PTCC or to the US Centers for Disease Control and Prevention (CDC), Center for Global Health, Division of Global HIV and TB, International Laboratory Branch (ILB) using the Contact Information listed below.</p>';
    $attestation .= '    <p style="width:100%;font-size:10pt;">Testing Personnel ____________________________________________ Date:________________________</p>';
    $attestation .= '    <p style="width:100%;font-size:10pt;">';
    $attestation .= '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
    $attestation .= '____________________________________________ Date:________________________</p>';
    $attestation .= '    <p style="width:100%;font-size:10pt;">Laboratory Manager (or Designee) _______________________________ Date:________________________</p>';
    $attestation .= '    <p style="width:100%;font-size:10pt;">* If corrective action forms are not available from your country’s National TB or Quality Assurance Program, corrective actions forms may be downloaded from ePT (<a href="http://ept.systemone.id/">http://ept.systemone.id/</a>).</p>';
    $attestation .= '</div>';

    foreach ($this->result['shipment'] as $result) {
        $fileSafeShipmentCode = str_replace( ' ', '-', str_replace(array_merge(
            array_map('chr', range(0, 31)),
            array('<', '>', ':', '"', '/', '\\', '|', '?', '*')
            ), '', $result['shipment_code']));
        $shipmentFolderPath = $reportsFolderPath . DIRECTORY_SEPARATOR . $fileSafeShipmentCode;
        if (!file_exists($shipmentFolderPath) || !is_dir($shipmentFolderPath)) {
            mkdir($shipmentFolderPath);
        }

        $pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

        $pdf->result = $result;
        $pdf->setSchemeName($this->header, $this->logo, $this->logoRight, $this->comingFrom);

        $pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE,
            PDF_HEADER_STRING);

        $pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
        $pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

        $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

        $pdf->SetMargins(PDF_MARGIN_LEFT, 52, PDF_MARGIN_RIGHT);
        $pdf->SetHeaderMargin(1);
        $pdf->SetFooterMargin(1);

        $pdf->SetAutoPageBreak(TRUE, 15);

        $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

        $pdf->SetFont('Helvetica', '', 11);

        // add a page
        $pdf->AddPage();

        if (trim($result['shipment_date']) != "") {
            $result['shipment_date'] = $this->dateFormat($result['shipment_date']);
        }
        if (trim($result['lastdate_response']) != "") {
            $result['lastdate_response'] = $this->dateFormat($result['lastdate_response']);
        }

        $configFile = APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.local.ini";
        if (!is_file($configFile)) {
            $configFile = APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini";
        }

        $config = new Zend_Config_Ini($configFile, APPLICATION_ENV);
        $responseDate = "";
        $shipmentTestDate = "";
        $shipmentScore = 0;
        $documentationScore = 0;
        $score = 0;

        if (isset($result['responseResult'][0]['responseDate']) &&
            trim($result['responseResult'][0]['responseDate'])!="") {
            $splitDate = explode(" ",$result['responseResult'][0]['responseDate']);
            $responseDate = $this->dateFormat($splitDate[0]);
        }
        $attributes='';
        if (isset($result['responseResult'][0]['attributes'])) {
            $attributes = json_decode($result['responseResult'][0]['attributes'], true);
        }

        $sampleRehydrationDate = "";
        if (isset($attributes['sample_rehydration_date']) &&
            trim($attributes['sample_rehydration_date'])!="") {
            $sampleRehydrationDate = $this->dateFormat($attributes['sample_rehydration_date']);
        }
        $shipmentReceiptDate = "";
        if (isset($result['responseResult'][0]['shipment_receipt_date']) && trim($result['responseResult'][0]['shipment_receipt_date'])!="") {
            $shipmentReceiptDate = $this->dateFormat($result['responseResult'][0]['shipment_receipt_date']);
        }

        if (isset($result['responseResult'][0]['shipment_test_date']) && trim($result['responseResult'][0]['shipment_test_date']) != "") {
            $shipmentTestDate = $this->dateFormat($result['responseResult'][0]['shipment_test_date']);
        }

        $labInfo = '<table cellpadding="2" style="width:100%;font-size:8pt;">';
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td style="border-top:solid 10px #000000;border-bottom:solid 10px #000000;background-color:#777777;color:#ffffff;text-align:center;width:40%;"><strong>Instrument SN</strong></td>';
        $labInfo .= '	     <td style="border-top:solid 10px #000000;border-bottom:solid 10px #000000;background-color:#777777;color:#ffffff;text-align:center;width:30%;"><strong>Last Calibration Date</strong></td>';
        $labInfo .= '	     <td style="border-top:solid 10px #000000;border-bottom:solid 10px #000000;background-color:#777777;color:#ffffff;text-align:center;width:30%;"><strong>Result Submission Date</strong></td>';
        $labInfo .= '    </tr>';
        foreach ($result['instrumentsUsed'] as $instrumentUsed) {
            $labInfo .= '    <tr>';
            $labInfo .= '	     <td style="text-align:center;border-bottom:solid 10px #000000;">'.$instrumentUsed['instrument_serial'].'</td>';
            $labInfo .= '	     <td style="text-align:center;border-bottom:solid 10px #000000;">'.Pt_Commons_General::dbDateToString($instrumentUsed['instrument_last_calibrated_on']).'</td>';
            $labInfo .= '	     <td style="text-align:center;border-bottom:solid 10px #000000;">'.Pt_Commons_General::dbDateToString($result['result_submission_date']).'</td>';
            $labInfo .= '    </tr>';
        }
        $labInfo .= '</table>';
        $pdf->writeHTML($labInfo, true, false, true, false, '');

        if (isset($result['responseResult']) && sizeof($result['responseResult']) > 0) {
            $labRes = '<table cellpadding="1" style="width:100%;font-size:8pt;">';
            $labRes .= '    <tr style="background-color:#777777;color:#ffffff;">';
            $labRes .= '	     <td style="text-align:center;border-top:solid 10px #000000;border-bottom:solid 10px #000000;" colspan="4"><strong>Site Results Testing with '.$result['assay_name'].'</strong></td>';
            $labRes .= '    </tr>';
            $labRes .= '    <tr>';
            $labRes .= '	     <td style="width:46%;border-bottom:solid 10px #000000;"></td>';
            $labRes .= '	     <td style="width:22%;border-bottom:solid 10px #000000;text-align:center;"><strong>MTB Detected</strong></td>';
            $labRes .= '	     <td style="width:22%;border-bottom:solid 10px #000000;text-align:center;"><strong>RIF Resistance</strong></td>';
            $labRes .= '	     <td style="width:10%;border-bottom:solid 10px #000000;text-align:center;"><strong>Score</strong></td>';
            $labRes .= '    </tr>';
            $scoreTotal = 0;
            $maxScoreTotal = 0;
            $exclusionCount = 0;
            $discrepantResultInSubmission = false;
            $noResultOrError2127InSubmission = false;
            foreach ($result['responseResult'] as $response) {
                if ($response[$result['assay_name'] == 'MTB Ultra' ? 'ref_ultra_is_excluded' : 'ref_mtb_rif_is_excluded'] == 'yes' &&
                    isset($response['ref_excluded_reason']) &&
                    trim($response['ref_excluded_reason']) != "") {
                    $exclusionCount++;
                }
                $labRes .= '    <tr>';
                $labRes .= '	     <td style="background-color:#cccccc;width:100%;" colspan="4"><strong>Sample ID: '.$response['sample_label'];
                if ($response[$result['assay_name'] == 'MTB Ultra' ? 'ref_ultra_is_excluded' : 'ref_mtb_rif_is_excluded'] == 'yes' &&
                    isset($response['ref_excluded_reason']) &&
                    trim($response['ref_excluded_reason']) != "") {
                    for ($excludedReasonIndex = 0; $excludedReasonIndex < $exclusionCount; $excludedReasonIndex++) {
                        $labRes .= '*';
                    }
                }
                $labRes .= '</strong></td>';
                $labRes .= '    </tr>';
                $labRes .= '    <tr>';
                $labRes .= '	     <td style="width:46%;">Expected Results-MTB/RIF</td>';
                $labRes .= '	     <td style="width:22%;text-align:center;">'.$tbResultValueMapping[$response['expected_mtb_rif_mtb_detected']].'</td>';
                $labRes .= '	     <td style="width:22%;text-align:center;">'.$tbResultValueMapping[$response['expected_mtb_rif_rif_resistance']].'</td>';
                $labRes .= '	     <td style="width:10%;"></td>';
                $labRes .= '    </tr>';
                $labRes .= '    <tr>';
                $labRes .= '	     <td style="width:46%;">Expected Results-Ultra</td>';
                $labRes .= '	     <td style="width:22%;text-align:center;">'.$tbResultValueMapping[$response['expected_ultra_mtb_detected']].'</td>';
                $labRes .= '	     <td style="width:22%;text-align:center;">'.$tbResultValueMapping[$response['expected_ultra_rif_resistance']].'</td>';
                $labRes .= '	     <td style="width:10%;"></td>';
                $labRes .= '    </tr>';
                $labRes .= '    <tr>';
                $labRes .= '	     <td style="width:46%;">All Participants\' Consensus Results-MTB/RIF</td>';
                $labRes .= '	     <td style="width:22%;text-align:center;">'.$tbResultValueMapping[$response['consensus_mtb_rif_mtb_detected']].'</td>';
                $labRes .= '	     <td style="width:22%;text-align:center;">'.$tbResultValueMapping[$response['consensus_mtb_rif_rif_resistance']].'</td>';
                $labRes .= '	     <td style="width:10%;">';
                if ($response['ref_mtb_rif_is_excluded'] == 'yes') {
                    if ($response['ref_mtb_rif_is_exempt'] == 'yes') {
                        $labRes .= '<span style="color:#ffa500;">(Exempt)</span>';
                    } else {
                        $labRes .= '<span style="color:#ff0000;">(Excluded)</span>';
                    }
                }
                $labRes .= '</td>';
                $labRes .= '    </tr>';
                $labRes .= '    <tr>';
                $labRes .= '	     <td style="width:46%;">All Participants\' Consensus Results-Ultra</td>';
                $labRes .= '	     <td style="width:22%;text-align:center;">'.$tbResultValueMapping[$response['consensus_ultra_mtb_detected']].'</td>';
                $labRes .= '	     <td style="width:22%;text-align:center;">'.$tbResultValueMapping[$response['consensus_ultra_rif_resistance']].'</td>';
                $labRes .= '	     <td style="width:10%;">';
                if ($response['ref_ultra_is_excluded'] == 'yes') {
                    if ($response['ref_ultra_is_exempt'] == 'yes') {
                        $labRes .= '<span style="color:#ffa500;">(Exempt)</span>';
                    } else {
                        $labRes .= '<span style="color:#ff0000;">(Excluded)</span>';
                    }
                }
                $labRes .= '</td>';
                $labRes .= '    </tr>';
                if ($response["discrepant_result"] || !isset($response['mtb_detected']) || $response['mtb_detected'] == "") {
                    $discrepantResultInSubmission = true;
                    $labRes .= '    <tr style="color: #ff0000;">';
                } else {
                    $labRes .= '    <tr>';
                }
                if ($tbResultValueMapping[$response['mtb_detected']] == "No Result" ||
                    $response['error_code'] == "2127") {
                    $noResultOrError2127InSubmission = true;
                }
                $labRes .= '	     <td style="width:46%;"><strong>'.htmlspecialchars($result['lab_name'], ENT_XML1).'</strong></td>';
                if ($response['mtb_detected'] == 'error') {
                    $labRes .= '	     <td style="width:22%;text-align:center;"><strong>Error: '.$response['error_code'].'</strong></td>';
                    $labRes .= '	     <td style="width:22%;text-align:center;"></td>';
                } else {
                    $labRes .= '	     <td style="width:22%;text-align:center;"><strong>'.$tbResultValueMapping[$response['mtb_detected']].'</strong></td>';
                    $labRes .= '	     <td style="width:22%;text-align:center;"><strong>'.$tbResultValueMapping[$response['rif_resistance']].'</strong></td>';
                }
                $labRes .= '	     <td style="width:10%;text-align:center;">';
                if ($result['is_excluded'] != 'yes') {
                    $labRes .= '	         <strong>'.$response['score'].'</strong>';
                }
                $labRes .= '	     </td>';
                $labRes .= '    </tr>';
            }
            $labRes .= '    <tr>';
            $labRes .= '	     <td style="width:46%;border-top: solid 10px #000000;"></td>';
            $labRes .= '	     <td style="width:22%;border-top: solid 10px #000000;border-bottom: solid 10px #000000;text-align:center;"><strong>Percentage</strong></td>';
            $labRes .= '	     <td style="width:22%;border-top: solid 10px #000000;border-bottom: solid 10px #000000;text-align:center;"><strong>Satisfactory/Unsatisfactory</strong></td>';
            $labRes .= '	     <td style="width:10%;border-top: solid 10px #000000;"></td>';
            $labRes .= '    </tr>';
            $labRes .= '    <tr>';
            $labRes .= '	     <td style="width:46%;background-color:#B6DDE8;border-bottom: solid 10px #000000;border-right: solid 10px #ffffff;"><strong>FINAL SCORE</strong></td>';
            $labRes .= '	     <td style="width:22%;background-color:#B6DDE8;border-top: solid 10px #000000;border-bottom: solid 10px #000000;text-align:center;">';
            if ($result['is_excluded'] != 'yes') {
                $labRes .= '	         <strong>'.round(($result['shipment_score'] / $result['max_shipment_score']) * 100, 1).'</strong>';
            }
            $labRes .= '	     </td>';
            $labRes .= '	     <td style="width:22%;background-color:#B6DDE8;border-top: solid 10px #000000;border-bottom: solid 10px #000000;text-align:center;">';
            if ($result['is_excluded'] == 'yes') {
                $labRes .= '	         <strong>Excluded</strong>';
            } else {
                $labRes .= '	         <strong>'.($result['submission_score_status'] == 'fail' ? 'Unsatisfactory' : 'Satisfactory').'</strong>';
            }
            $labRes .= '	     </td>';
            $labRes .= '	     <td style="width:10%;border-top: solid 10px #000000;"></td>';
            $labRes .= '    </tr>';
            foreach ($result['responseResult'] as $response) {
                if ($response[$result['assay_name'] == 'MTB Ultra' ? 'ref_ultra_is_excluded' : 'ref_mtb_rif_is_excluded'] == 'yes' &&
                    isset($response['ref_excluded_reason']) &&
                    trim($response['ref_excluded_reason']) != "") {
                    $labRes .= '    <tr>';
                    $labRes .= '        <td colspan="4">';
                    $labRes .= '            <strong>';
                    for ($excludedReasonIndex = 0; $excludedReasonIndex < $exclusionCount; $excludedReasonIndex++) {
                        $labRes .= '*';
                    }
                    $labRes .= '            </strong> ' . htmlspecialchars($response['ref_excluded_reason'], ENT_XML1);
                    $labRes .= '        </td>';
                    $labRes .= '    </tr>';
                }
            }
            $labRes .= '    <tr>';
            $labRes .= '	     <td colspan="4"><br/><br/><br/><hr style="width:100%;"/></td>';
            $labRes .= '    </tr>';
            $labRes .= '</table>';
            $pdf->writeHTML($labRes, true, false, true, false, '');
            $pdf->AddPage();
            $commentsSection = '<table cellpadding="2" style="width:100%;font-size:8pt;">';
            $commentsSection .= '    <tr style="background-color:#777777;color:#ffffff;">';
            $commentsSection .= '	     <td style="text-align:center;border-top:solid 10px #000000;border-bottom:solid 10px #000000;"><strong>Comments</strong></td>';
            $commentsSection .= '    </tr>';
            if ((isset($result['eval_comment']) && $result['eval_comment'] != '') ||
                (isset($result['optional_eval_comment']) && $result['optional_eval_comment'] != '') ||
                $discrepantResultInSubmission || isset($result['cartridge_expired_on']) ||
                $noResultOrError2127InSubmission ||
                (isset($result['instrument_requires_calibration']) && $result['instrument_requires_calibration']) ||
                !isset($result['supervisor_approval']) || $result['supervisor_approval'] == '' || $result['supervisor_approval'] == 'no' ||
                !isset($result['qc_done_on_time']) || !$result['qc_done_on_time'] ||
                (isset($result['ptNotTestedComment']) && $result['ptNotTestedComment'] != '')) {
                $allComments = array();
                if (isset($result['eval_comment']) && $result['eval_comment'] !== '') {
                    array_push($allComments, htmlspecialchars($result['eval_comment'], ENT_XML1));
                }
                if (isset($result['optional_eval_comment']) && $result['optional_eval_comment'] !== '') {
                    array_push($allComments, htmlspecialchars($result['optional_eval_comment'], ENT_XML1));
                }
                if (isset($result['ptNotTestedComment']) && $result['ptNotTestedComment'] != '') {
                    array_push($allComments, htmlspecialchars($result['ptNotTestedComment'], ENT_XML1));
                } else {
                    if ($discrepantResultInSubmission) {
                        array_push($allComments, 'Red highlighted results represent discrepancies between actual and expected results.');
                    }
                    if (isset($result['cartridge_expired_on']) && $result['cartridge_expired_on'] != '') {
                        array_push($allComments, 'Xpert cartridge kit expired '.Pt_Commons_General::dbDateToString($result['cartridge_expired_on']).'. Use of expired reagents could lead to incorrect reporting of clinical results.'.$result['tests_done_on_expired_cartridges']);
                    }
                    if ($noResultOrError2127InSubmission) {
                        array_push($allComments, 'Check computer software GeneXpert Dx to ensure software is not freezing during testing. Check uninterrupted power supply (UPS) to ensure it is capable of sustaining power to GeneXpert for a minimum of 2 hours should an electrical power outage occur. If UPS is unable to sustain GeneXpert instrument for 2 hours request sufficient UPS that will provide power to GeneXpert instrument for no less than 2 hours to enable current run completion in the event of a power outage.');
                    }
                    if ($result['instrument_requires_calibration']) {
                        array_push($allComments, 'Calibration is an important maintenance procedure to ensure GeneXpert instruments are functioning properly and yielding accurate results. '.$result['tests_done_after_calibration_due'].'Instrument calibration should take place each year or after every 2,000 runs on each instrument module (whichever comes first). Entered data suggest your GeneXpert Instrument is due for calibration. Request an XpertCheck module calibration kit and perform calibration as instructed. Details on how to perform GeneXpert Instrument calibration can be found at <a href="http://www.stoptb.org/wg/gli/TrainingPackage_Xpert_MTB_RIF.asp">http://www.stoptb.org/wg/gli/TrainingPackage_Xpert_MTB_RIF.asp</a> module 10 MAINTENANCE.');
                    }
                    if (!isset($result['qc_done_on_time']) || !$result['qc_done_on_time']) {
                        array_push($allComments, 'Entered data suggest monthly maintenance needs to be performed.  Proper and timely monthly maintenance helps to ensure the longevity and accuracy of the GeneXpert Instrument. Details on how to perform GeneXpert Instrument monthly maintenance can be found at <a href="http://www.stoptb.org/wg/gli/TrainingPackage_Xpert_MTB_RIF.asp">http://www.stoptb.org/wg/gli/TrainingPackage_Xpert_MTB_RIF.asp</a> module 10 MAINTENANCE.');
                    }
                    if (!isset($result['supervisor_approval']) || $result['supervisor_approval'] == '' || $result['supervisor_approval'] == 'no') {
                        array_push($allComments, 'Entered data suggest submitted results were not cross checked by a supervisor or designee.  Supervisory report review is an important step in quality assurance of laboratory testing results and must be incorporated into the workflow of all laboratories to ensure accuracy of all reported results.');
                    }
                }
                if (count($allComments) > 0) {
                    $commentsSection .= '    <tr>';
                    $commentsSection .= '	     <td>';
                    if (count($allComments) > 1) {
                        $commentsSection .= '	         <ul>';
                    }
                    foreach ($allComments as $comment) {
                        if (count($allComments) > 1) {
                            $commentsSection .= '	             <li>';
                        }
                        $commentsSection .= $comment;
                        if (count($allComments) > 1) {
                            $commentsSection .= '	             </li>';
                        }
                    }
                    if (count($allComments) > 1) {
                        $commentsSection .= '             </ul>';
                    }
                    $commentsSection .= '        </td>';
                    $commentsSection .= '    </tr>';
                }
            }
            $commentsSection .= '</table>';
            $pdf->writeHTMLTogether($commentsSection, true, false, true, false, '');
            $correctiveActionsSection = null;
            if (isset($result['corrective_actions']) && count($result['corrective_actions'])  > 0) {
                $correctiveActionsSection = '<br />';
                $correctiveActionsSection .= '<table cellspacing="1" cellpadding="2" style="width:100%;font-size:8pt;">';
                $correctiveActionsSection .= '    <tr style="background-color:#777777;color:#ffffff;">';
                $correctiveActionsSection .= '	     <td style="text-align:center;border-top:solid 10px #000000;border-bottom:solid 10px #000000;" colspan="2"><strong>Corrective Actions Checklist</strong></td>';
                $correctiveActionsSection .= '    </tr>';
                foreach ($result['corrective_actions'] as $correctiveAction) {
                    $correctiveActionsSection .= '    <tr>';
                    $correctiveActionsSection .= '	     <td style="border:solid 10px #000000;width:17px;"></td>';
                    $correctiveActionsSection .= '	     <td>'.htmlspecialchars($correctiveAction, ENT_XML1).'</td>';
                    $correctiveActionsSection .= '    </tr>';
                }
                $correctiveActionsSection .= '</table>';
                $pdf->writeHTMLTogether($correctiveActionsSection, true, false, true, false, '');
            }
        }
        $longitudinalPerformanceSvg = '<?xml version="1.0" encoding="UTF-8"?>';
        $longitudinalPerformanceSvg .= '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 160">';
        $longitudinalPerformanceSvg .= '    <rect width="400" height="150" x="0" y="0" stroke="#E4E4E4" stroke-width="1" fill="white" />';
        $longitudinalPerformanceSvg .= '    <text x="200" y="12" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:8pt">'.htmlspecialchars($result['lab_name'], ENT_XML1).' Performance Over Time</text>';
        $longitudinalPerformanceSvg .= '    <text x="15" y="22" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">100</text>';
        $longitudinalPerformanceSvg .= '    <line x1="30" x2="390" y1="20" y2="20" stroke="#E4E4E4" stroke-width="1" />';
        $longitudinalPerformanceSvg .= '    <text x="15" y="42" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">80</text>';
        $longitudinalPerformanceSvg .= '    <line x1="30" x2="390" y1="40" y2="40" stroke="#E4E4E4" stroke-width="1" />';
        $longitudinalPerformanceSvg .= '    <text x="15" y="62" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">60</text>';
        $longitudinalPerformanceSvg .= '    <line x1="30" x2="390" y1="60" y2="60" stroke="#E4E4E4" stroke-width="1" />';
        $longitudinalPerformanceSvg .= '    <text x="15" y="82" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">40</text>';
        $longitudinalPerformanceSvg .= '    <line x1="30" x2="390" y1="80" y2="80" stroke="#E4E4E4" stroke-width="1" />';
        $longitudinalPerformanceSvg .= '    <text x="15" y="102" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">20</text>';
        $longitudinalPerformanceSvg .= '    <line x1="30" x2="390" y1="100" y2="100" stroke="#E4E4E4" stroke-width="1" />';
        $longitudinalPerformanceSvg .= '    <text x="15" y="122" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">0</text>';
        $longitudinalPerformanceSvg .= '    <line x1="30" x2="390" y1="120" y2="120" stroke="#E4E4E4" stroke-width="1" />';
        for($participantPreviousSixShipmentIndex = 0; $participantPreviousSixShipmentIndex < 6; $participantPreviousSixShipmentIndex++) {
            $previousShipment = $result['previous_six_shipments'][$participantPreviousSixShipmentIndex];
            if ($previousShipment['shipment_score'] != null && $previousShipment['shipment_score'] > 0) {
                $longitudinalPerformanceSvg .= '    <rect width="30" height="' . $previousShipment['shipment_score'] . '" x="'.(($participantPreviousSixShipmentIndex * 60) + 15 + 30).'" y="'.(100 - $previousShipment['shipment_score'] + 20).'" fill="#4F81BD" />';
            }
            if ($participantPreviousSixShipmentIndex > 0) {
                $previousShipmentBefore = $result['previous_six_shipments'][$participantPreviousSixShipmentIndex - 1];
                $longitudinalPerformanceSvg .= '    <line x1="'.(($participantPreviousSixShipmentIndex * 60) - 30 + 30).'" x2="'.(($participantPreviousSixShipmentIndex * 60) + 30 + 30).'" y1="'.(100 - $previousShipmentBefore['mean_shipment_score'] + 20).'" y2="'.(100 - $previousShipment['mean_shipment_score'] + 20).'" stroke="#C0504D" stroke-width="2" />';
            }
            $longitudinalPerformanceSvg .= '    <text x="'.(($participantPreviousSixShipmentIndex * 60) + 60).'" y="130" dominant-baseline="middle" text-anchor="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">'.$previousShipment['shipment_code'].'</text>';
        }
        $longitudinalPerformanceSvg .= '    <rect width="4" height="4" x="120" y="139" fill="#4F81BD"  />';
        $longitudinalPerformanceSvg .= '    <text x="125" y="143" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Site Score</text>';
        $longitudinalPerformanceSvg .= '    <line x1="160" x2="166" y1="141" y2="141" stroke="#C0504D" stroke-width="2" />';
        $longitudinalPerformanceSvg .= '    <text x="168" y="143" dominant-baseline="middle" style="fill:#666666;font-family:helvetica;font-size:5pt">Mean Score of All Participating Sites</text>';
        $longitudinalPerformanceSvg .= '</svg>';
        $pdf->ImageSVG('@' . $longitudinalPerformanceSvg, 15, 210, 180, 70);
        $pdf->AddPage();

        $finalisedBy = '<br/><p style="width:100%;font-size:10pt;">Report Issued by: Patricia Hall&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date:&nbsp;';
        if (trim($this->comingFrom)=="finalize") {
            $finalisedBy .= '<span style="text-decoration:underline;">'.date("d-M-Y").'</span>';
        } else {
            $finalisedBy .= '________________________';
        }
        $finalisedBy .= '</p>';

        if (isset($result['ptcc_profiles']) && count($result['ptcc_profiles']) > 0) {
            $ptccDetails = '<table cellpadding="2" style="width:100%;font-size:10pt;">';
            $ptccDetails .= '    <tr>';
            $ptccDetails .= '	     <td style="border:solid 1px #000000;" colspan="'.count($result['ptcc_profiles']).'"><h3>Proficiency Test Country Coordinators (PTCC)</h3></td>';
            $ptccDetails .= '    </tr>';
            $ptccDetails .= '    <tr>';
            $ptccDetails .= '	     <td style="border:solid 1px #000000;">'.$result['ptcc_profiles'][0]['first_name'].' '.htmlspecialchars($result['ptcc_profiles'][0]['last_name'], ENT_XML1).'</td>';
            if (count($result['ptcc_profiles']) > 1) {
                $ptccDetails .= '	     <td style="border:solid 1px #000000;">';
                $ptccDetails .= '	         '.htmlspecialchars($result['ptcc_profiles'][1]['first_name'], ENT_XML1).' '.htmlspecialchars($result['ptcc_profiles'][1]['last_name'], ENT_XML1);
                $ptccDetails .= '        </td>';
            }
            $ptccDetails .= '    </tr>';
            $ptccDetails .= '    <tr>';
            $ptccDetails .= '	     <td style="border:solid 1px #000000;"><a href="mailto:'.htmlspecialchars($result['ptcc_profiles'][0]['primary_email'], ENT_XML1).'">'.htmlspecialchars($result['ptcc_profiles'][0]['primary_email'], ENT_XML1).'</a></td>';
            if (count($result['ptcc_profiles']) > 1) {
                $ptccDetails .= '	     <td style="border:solid 1px #000000;">';
                $ptccDetails .= '	         <a href="mailto:'.htmlspecialchars($result['ptcc_profiles'][1]['primary_email'], ENT_XML1).'">'.htmlspecialchars($result['ptcc_profiles'][1]['primary_email'], ENT_XML1).'</a>';
                $ptccDetails .= '        </td>';
            }
            $ptccDetails .= '    </tr>';
            $ptccDetails .= '</table><br/><br/>';
        } else {
            $ptccDetails = '';
        }

        $cdcDetails = '<div style="border:solid 1px #000000;">';
        $cdcDetails .= '    <table cellpadding="2" style="width:100%;font-size:10pt;">';
        $cdcDetails .= '        <tr>';
        $cdcDetails .= '    	     <td colspan="2" style="padding-top:0;margin-top:0;">';
        $cdcDetails .= '    	         <h3 style="line-height:4em;">Contact Information</h3>';
        $cdcDetails .= '    	         <br/><span>Xpert TB Proficiency Test Program</span>';
        $cdcDetails .= '    	         <br/><a href="mailto:xtpt@cdc.gov">xtpt@cdc.gov</a><br/>';
        $cdcDetails .= '    	     </td>';
        $cdcDetails .= '        </tr>';
        $cdcDetails .= '        <tr>';
        $cdcDetails .= '    	     <td>';
        $cdcDetails .= '    	         <br/><span style="text-decoration:underline;font-style:italic;">Kyle DeGruy</span>';
        $cdcDetails .= '    	         <br/><span>Program Coordinator, TB and Clinical Monitoring Team</span>';
        $cdcDetails .= '    	         <br/><span>International Laboratory Branch</span>';
        $cdcDetails .= '    	         <br/><span>Division of Global HIV and TB</span>';
        $cdcDetails .= '    	         <br/><span>Center for Global Health</span>';
        $cdcDetails .= '    	         <br/><span>US Centers for Disease Control and Prevention</span>';
        $cdcDetails .= '    	         <br/><a href="mailto:gsz4@cdc.gov">gsz4@cdc.gov</a>';
        $cdcDetails .= '    	     </td>';
        $cdcDetails .= '    	     <td>';
        $cdcDetails .= '    	         <br/><span style="text-decoration:underline;font-style:italic;">Patricia Hall</span>';
        $cdcDetails .= '    	         <br/><span>Team Lead, TB and Clinical Monitoring Team</span>';
        $cdcDetails .= '    	         <br/><span>International Laboratory Branch</span>';
        $cdcDetails .= '    	         <br/><span>Division of Global HIV and TB</span>';
        $cdcDetails .= '    	         <br/><span>Center for Global Health</span>';
        $cdcDetails .= '    	         <br/><span>US Centers for Disease Control and Prevention</span>';
        $cdcDetails .= '    	         <br/><a href="mailto:igg5@cdc.gov">igg5@cdc.gov</a>';
        $cdcDetails .= '    	     </td>';
        $cdcDetails .= '        </tr>';
        $cdcDetails .= '    </table>';
        $cdcDetails .= '</div>';
        $pdf->writeHTMLTogether($finalisedBy.$attestation.$ptccDetails.$cdcDetails, true, false, true, false, '');

        if (ob_get_contents()) {
            ob_end_clean();
        }

        // If headers User-Agent: ^Postman and X-Debug: ^preview$
        // We are using Postman to develop/debug the PDF generation
        if (
            preg_match('/^postman/i', @$_SERVER['HTTP_USER_AGENT']) &&
            preg_match('/^preview$/i', @$_SERVER['HTTP_X_DEBUG'])
        ) {
            $pdf->Output("", "I");
            exit;
        }

        $fileName = $result['lab_name']."-".$result['map_id'].".pdf";
        $fileName = preg_replace('/[^A-Za-z0-9.]/', '-', $fileName);
        $fileName = str_replace(" ", "-", $fileName);

        $filePath = $shipmentFolderPath . DIRECTORY_SEPARATOR . $fileName;
        $created = $pdf->Output($filePath, "F");

        $loadpdf = Zend_Pdf::load($filePath);

        foreach ($loadpdf->pages as $page) {
            $pdfExtract = $extractor->clonePage($page);
            $pdfNew->pages[] = $pdfExtract;
        }
        $shipmentCode = $result['shipment_code'];
        $j++;
    }

    $mergePdf = $fileSafeShipmentCode . "-" . $this->bulkfileNameVal . "-bulk-participant-report.pdf";
    $mergeFilePath = $shipmentFolderPath . DIRECTORY_SEPARATOR . $mergePdf;
    $pdfNew->save($mergeFilePath);

    foreach ($this->result['dmResult'] as $key=>$dmRes) {
        $pdfNew->pages = array();
        $expRes = explode("$",$dmRes);
        $resCount = count($expRes);
        if ($resCount > 0) {
            foreach ($expRes as $res) {
                $expStrRes = explode("#", $res);
                $dmFileName = $key . "-dm.pdf";
                $participantFileName = $key . "-participant.pdf";
                if (count($expStrRes) > 0) {
                    $dmFileName = $expStrRes[0] . $key . ".pdf";
                }
                if (count($expStrRes) > 2) {
                    $participantFileName = $expStrRes[2].".pdf";
                } else if (count($expStrRes) > 1) {
                    $participantFileName = $expStrRes[1].".pdf";
                } else if (count($expStrRes) > 0) {
                    $participantFileName = $expStrRes[0].".pdf";
                }
                $participantFileName = preg_replace('/[^A-Za-z0-9.]/', '-', $participantFileName);
                $participantFileName = str_replace(" ", "-", $participantFileName);
                $filePath = $shipmentFolderPath . DIRECTORY_SEPARATOR . $participantFileName;

                $loadpdf = Zend_Pdf::load($filePath);
                foreach ($loadpdf->pages as $page) {
                    $pdfExtract = $extractor->clonePage($page);
                    $pdfNew->pages[] = $pdfExtract;
                }
            }
        }

        $dmFileName = preg_replace('/[^A-Za-z0-9.]/', '-', $dmFileName);
        $dmFileName = str_replace(" ", "-", $dmFileName);

        $mergePdf = $fileSafeShipmentCode . "-" . $dmFileName;
        $mergeFilePath = $shipmentFolderPath . DIRECTORY_SEPARATOR . $mergePdf;
        $pdfNew->save($mergeFilePath);
    }

    //============================================================+
    // END OF FILE
    //============================================================+
    echo "success";
}
