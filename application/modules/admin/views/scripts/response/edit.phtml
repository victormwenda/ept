<?php
$shipmentListSession = new Zend_Session_Namespace('shipmentList');
$urlListArray = $shipmentListSession->editUrlList;
$this->currentUrl;
$pos = array_search($this->currentUrl, $urlListArray);
$prev = $pos - 1;
$next = $pos + 1;
$previousLink = $nextLink = "";
if ($prev >= 0) {
	$previousLink = $urlListArray[$prev];
}
if ($next < count($urlListArray)) {
    $nextLink = $urlListArray[$next];
}
$reportDate = explode(" ", $this->responseData['shipment']['shipment_test_report_date']); ?>
<br/>
<legend>Participant Result Summary</legend>
<table class="table table-bordered table-striped" style="width:100%;margin:10px auto;padding-bottom:10px;">
    <tr>
        <td style="width:25%;">
            <h4 class="text-info">Participant Name</h4>&nbsp;
            <?php echo $this->responseData['participant']['lab_name'];?>
        </td>
        <td style="width:25%;">
            <h4 class="text-info">Participant Code</h4>&nbsp;
            <?php echo $this->responseData['participant']['unique_identifier'] ?>
        </td>
        <td style="width:25%;">
            <h4 class="text-info">Affiliation</h4>&nbsp;
            <?php echo ($this->responseData['participant']['affiliation']);?>
        </td>
        <td style="width:25%;">
            <h4 class="text-info">Phone No</h4>&nbsp;
            <?php  echo ($this->responseData['participant']['mobile'].'<br/>'.$this->responseData['participant']['phone']); ?>
        </td>
    </tr>
    <tr>
        <td>
            <h4 class="text-info">Shipment Code</h4>&nbsp;
            <?php echo $this->responseData['shipment']['shipment_code'];?>
        </td>
        <td>
            <h4 class="text-info">Scheme Type</h4>&nbsp;
            <?php echo strtoupper($this->responseData['shipment']['scheme_type']); ?>
        </td>
        <td>
            <h4 class="text-info">Shipment Date</h4>&nbsp;
            <?php echo $this->dateFormat($this->responseData['shipment']['shipment_date']); ?>
        </td>
        <td>
            <h4 class="text-info">Result Due Date</h4>&nbsp;
            <?php echo $this->dateFormat($this->responseData['shipment']['lastdate_response']); ?>
        </td>
    </tr>
</table>
<hr>
<form name="updateResultsForm" id="updateResultsForm" method="post" action=""
      onsubmit="return validateNow();return false;">
<input type="hidden" name="shipmentId" id="shipmentId"
       value="<?php echo $this->responseData['shipment']['shipment_id']; ?>" />
<input type="hidden" name="participantId" id="participantId"
       value="<?php echo $this->responseData['shipment']['participant_id']; ?>" />
<input type="hidden" name="smid" id="smid" value="<?php echo $this->responseData['shipment']['map_id']; ?>" />
<input type="hidden" name="scheme" id="scheme" value="<?php echo $this->scheme; ?>" />
<input type="hidden" name="whereToGo" id="whereToGo" value="" />
<input type="hidden" name="submitAction" id="submitAction" value="" />
<input type="hidden" id="hdLastDate" name="hdLastDate"
       value="<?php echo $this->responseData['shipment']['lastdate_response'];?>" />
<?php
if ($this->scheme == 'tb') {
    include('edit-tb-response.phtml');
} else {
    ?>
    <br />
    <br />
    <br />
    <h4 style='text-align:center;'>
        Administrator Responses for this scheme (<?php echo $this->scheme ?>) is not yet implemented
    </h4>
    <br />
    <br />
    <br />
<?php
} ?>
<table id="submissionFooter" class="table table-bordered table-striped" style="width:100%;margin:10px auto;">
    <tr>
        <th style="width:20%;">
            Supervisor Review
            <span class='mandatory'>*</span>
        </th>
        <td style="width:20%;">
            <select name="supervisorApproval" id="supervisorApproval" class="form-control isRequired">
                <option value="">--Select--</option>
                <option value="yes" <?php if($this->responseData['shipment']['supervisor_approval'] == 'yes') echo " selected "; ?>>
                    Yes
                </option>
                <option value="no" <?php if($this->responseData['shipment']['supervisor_approval'] == 'no') echo " selected "; ?>>
                    No
                </option>
            </select>
        </td>
        <th>
            <label id="labSupervisor" <?php echo(isset($this->shipment['supervisor_approval']) && $this->responseData['shipment']['supervisor_approval'] == 'yes') ? "" : "style='display:none;'" ?>>
                Supervisor Name
                <span class='mandatory'>*</span>
            </label>
        </th>
        <td>
            <input name="participantSupervisor" id="participantSupervisor" <?php echo(isset($this->responseData['shipment']['supervisor_approval']) && $this->responseData['shipment']['supervisor_approval'] == 'yes') ? "" : "style='display:none;'" ?>
                   type="text" class="form-control"
                   value="<?php echo $this->responseData['shipment']['participant_supervisor']; ?>"/>
        </td>
    </tr>
    <tr>
        <th>Comments </th>
        <td colspan="3">
            <textarea name="userComments" id="userComments" class="form-control" maxlength="2000"><?php echo $this->responseData['shipment']['user_comment']; ?></textarea>
        </td>
    </tr>
</table>
<?php
if (isset($this->haveCustom) && $this->haveCustom == 'yes') { ?>
<fieldset>
	<legend>Custom Fields</legend>
    <table>
        <tr>
            <th style="width:250px;padding:5px;"><?php echo $this->customField1; ?></th>
            <td style="padding:5px;">
                <input name="customField1" id="customField1" type="text" size="80" maxlength="40"
                       value="<?php echo  $this->responseData['shipment']['custom_field_1']; ?>" />
            </td>
        </tr>
        <?php
        if (isset($this->customField2) && $this->customField2 != "") { ?>
        <tr>
            <th style="width:250px;padding:5px;"><?php echo $this->customField2; ?></th>
            <td style="padding:5px;">
                <input name="customField2" id="customField2" type="text"
                       value="<?php echo  $this->responseData['shipment']['custom_field_2']; ?>"/>
            </td>
        </tr>
        <?php
        } ?>
    </table>
</fieldset>
<?php
} ?>
<br />
<div id="respond" style="margin: 10px auto 10px auto; text-align: center;" align="center">
	<h5>Currently editing result <?php echo $pos+1 . " of ".count($urlListArray); ?></h5>
	<?php
	if (isset($previousLink) && $previousLink != "") { ?>
	<button class="btn btn-primary" type="button"
            onclick="save_form();$('#whereToGo').val('<?php echo $previousLink; ?>');$('#updateResultsForm').submit();return false;">
        <span><i class="icon-chevron-left"></i> Update and Previous</span>
    </button>
	<?php
	} ?>
	<button class="btn btn-primary" type="button"
            onclick="save_form();$('#whereToGo').val('');$('#updateResultsForm').submit();return false;">
        <span>Update</span>
    </button>
	<?php
	if (isset($nextLink) && $nextLink != "") { ?>
    <button class="btn btn-primary" type="button"
            onclick="save_form();$('#whereToGo').val('<?php echo $nextLink; ?>');$('#updateResultsForm').submit();return false;">
        <span>Update and Next <i class="icon-chevron-right"></i></span>
    </button>
    <?php
	} ?>
    <br />
    <br />
    <?php
    if ($this->responseData['shipment']['evaluation_status'][2] == '9') {
        if (isset($previousLink) && $previousLink != "") { ?>
            <button class="btn btn-warning" type="button"
                    onclick="submit_form();$('#whereToGo').val('<?php echo $previousLink; ?>');$('#updateResultsForm').submit();return false;">
                <span><i class="icon-chevron-left"></i> Submit and Previous</span>
            </button>
            <?php
        } ?>
        <button class="btn btn-warning" type="button"
                onclick="submit_form();$('#whereToGo').val('');$('#updateResultsForm').submit();return false;">
            <span>Submit</span>
        </button>
        <?php
        if (isset($nextLink) && $nextLink != "") { ?>
            <button class="btn btn-warning" type="button"
                    onclick="submit_form();$('#whereToGo').val('<?php echo $nextLink; ?>');$('#updateResultsForm').submit();return false;">
                    Submit and Next <i class="icon-chevron-right"></i></span>
            </button>
            <?php
        }
    }?>
    <br />
    <br />
	<input class="btn btn-danger" type="button"
           onclick="document.location='/admin/response/shipment/sid/<?php echo base64_encode($this->responseData['shipment']['shipment_id']); ?>'"
           tabindex="8" value="Back to Listing "/>
</div>
</form>
<?php
$vHelper = $this->getHelper('DateFormat');
$dtFormat =  $vHelper->getDateFormat();
?>
<script type="text/javascript" src="<?php echo $this->baseUrl("js/jquery.validate.js"); ?>"></script>
<script type="text/javascript">
  var lastValue, formValidator;
  var previouslySubmitted = false;
  $(document).ready(function() {
    <?php if ($this->responseData['shipment']['evaluation_status'][2] == '1') { ?>
    previouslySubmitted = true;
    <?php } else { ?>
    previouslySubmitted = false;
    <?php } ?>

    $(".datepicker" ).datepicker({dateFormat: '<?php echo $dtFormat;?>'});
    $('.oneDecimal, .zeroDecimal').keypress(function () {
      var $this = $(this);
      $this.val($this.val().replace(/[^\d.]/g, ''));
    });

<?php
if ($this->scheme == 'tb') { ?>
    jQuery.validator.addMethod('dateLargerThan', function (value, dateInput, baseDateInputSelector) {
      return moment(value).diff(new Date($(baseDateInputSelector).val())) >= 0;
    });

    jQuery.validator.addMethod('validRifForMtbDetected', function (value, rifInput, mtbInputSelector) {
      if (['detected', 'high', 'medium', 'low', 'veryLow'].includes($(mtbInputSelector).val())) {
        return ['detected', 'notDetected', 'indeterminate'].includes(value);
      }
      return true;
    });

    jQuery.validator.addMethod('validRifForMtbTraceDetected', function (value, rifInput, mtbInputSelector) {
      if ($(mtbInputSelector).val() === 'trace') {
        return value === 'indeterminate';
      }
      return true;
    });

    jQuery.validator.addMethod('validRifForNoMtb', function (value, rifInput, mtbInputSelector) {
      if (!['detected', 'high', 'medium', 'low', 'veryLow', 'trace'].includes($(mtbInputSelector).val())) {
        return value === 'na';
      }
      return true;
    });

    jQuery.validator.addMethod('ctEndpointValue', function (value) {
      return value <= 42;
    });

    var validationOptions = {
      errorElement: "div",
      focusInvalid: false,
      errorPlacement: function(error, element) {
        if (element.attr("name") == "receiptDate") {
          error.insertAfter("#clearReceiptDate");
        } else if (element.attr("name") == "expiryDate") {
          error.insertAfter("#clearExpiryDate");
        } else if (element.attr("name") == "testReceiptDate") {
          error.insertAfter("#clearTestReceiptDate");
        } else if (element.attr("name") == "qcDate") {
          error.insertAfter("#clearQcDate");
        } else {
          error.insertAfter(element);
        }
      },
      rules: {
        notTestedReason: {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("input[name='ableToEnterResults']:checked").val() === "no";
            }
          }
        },
        notTestedOtherReason: {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("#notTestedReason").val() === "other";
            }
          }
        },
        receiptDate: {
          required: {
            depends: function () {
              return $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        expiryDate: {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        testReceiptDate: {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        cartridgeLotNo: {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        assay: {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        qcDate: {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("#qcDoneYes").is(":checked") &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        qcDoneBy: {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("#qcDoneYes").is(":checked") &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        supervisorApproval: {
          required: {
            depends: function () {
              return $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        participantSupervisor: {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $('#supervisorApproval').val() === 'yes' &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
<?php
    $count = 0;
    $index = 0;
    foreach ($this->responseData['results'] as $result) {
        $count++; ?>
        'dateTested[<?php echo $index; ?>]': {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        'mtbDetected[<?php echo $index; ?>]': {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        'rifResistance[<?php echo $index; ?>]': {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          validRifForMtbDetected: {
            param: '#mtbDetected<?php echo $count; ?>',
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("#mtbDetected<?php echo $count; ?>").val() !== '' &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          validRifForNoMtb: {
            param: '#mtbDetected<?php echo $count; ?>',
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("#mtbDetected<?php echo $count; ?>").val() !== '' &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        'errorCode[<?php echo $index; ?>]': {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                $("#mtbDetected<?php echo $count; ?>").val() === 'error' &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        'probe1[<?php echo $index; ?>]': {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          number: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          ctEndpointValue: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        'probe2[<?php echo $index; ?>]': {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          number: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          ctEndpointValue: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        'probe3[<?php echo $index; ?>]': {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          number: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          ctEndpointValue: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        'probe4[<?php echo $index; ?>]': {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          number: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          ctEndpointValue: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        'probe5[<?php echo $index; ?>]': {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          number: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          ctEndpointValue: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
        'probe6[<?php echo $index; ?>]': {
          required: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          number: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          },
          ctEndpointValue: {
            depends: function () {
              return ($('#submitAction').val() === 'submit' || previouslySubmitted) &&
                ['detected', 'high', 'medium', 'low', 'veryLow', 'trace', 'notDetected'].includes($("#mtbDetected<?php echo $count; ?>").val()) &&
                $("input[name='ableToEnterResults']:checked").val() === "yes";
            }
          }
        },
<?php
        $index++;
    } ?>
      },
      messages: {
        notTestedReason: "Why couldn't the PE panel be tested?",
        notTestedOtherReason: "Required if 'Other' selected",
        receiptDate: "What date did you receipt the panel?",
        expiryDate: "Please enter the expiration date of cartridge",
        testReceiptDate: "When did the lab submit the results?",
        cartridgeLotNo: "Please enter the lot number of cartridge",
        assay: "Which assay was used to run the samples?",
        qcDate: "When was monthly maintenance done?",
        qcDoneBy: "Who performed monthly maintenance?",
        participantSupervisor: "What is the name of the supervisor who approved this submission?",
<?php
    $index = 0;
    foreach ($this->responseData['results'] as $result) { ?>
        'dateTested[<?php echo $index; ?>]': {
          required: "Required"
        },
        'mtbDetected[<?php echo $index; ?>]': "Required",
        'rifResistance[<?php echo $index; ?>]': {
          required: "Required",
          validRifForMtbDetected: "Invalid Selection for MTB Detected",
          validRifForNoMtb: "Invalid Selection for MTB Detected"
        },
        'errorCode[<?php echo $index; ?>]': "Required",
        'probe1[<?php echo $index; ?>]': {
          required: "Required",
          number: "Only numerical values allowed for probe/spc fields",
          ctEndpointValue: "A value was detected above 42, have you entered endpoint values by mistake?"
        },
        'probe2[<?php echo $index; ?>]': {
          required: "Required",
          number: "Only numerical values allowed for probe/spc fields",
          ctEndpointValue: "A value was detected above 42, have you entered endpoint values by mistake?"
        },
        'probe3[<?php echo $index; ?>]': {
          required: "Required",
          number: "Only numerical values allowed for probe/spc fields",
          ctEndpointValue: "A value was detected above 42, have you entered endpoint values by mistake?"
        },
        'probe4[<?php echo $index; ?>]': {
          required: "Required",
          number: "Only numerical values allowed for probe/spc fields",
          ctEndpointValue: "A value was detected above 42, have you entered endpoint values by mistake?"
        },
        'probe5[<?php echo $index; ?>]': {
          required: "Required",
          number: "Only numerical values allowed for probe/spc fields",
          ctEndpointValue: "A value was detected above 42, have you entered endpoint values by mistake?"
        },
        'probe6[<?php echo $index; ?>]': {
          required: "Required",
          number: "Only numerical values allowed for probe/spc fields",
          ctEndpointValue: "A value was detected above 42, have you entered endpoint values by mistake?"
        },
<?php
         $index++;
     } ?>
      }
    };

    formValidator = $("#updateResultsForm").validate(validationOptions);
    $("#updateResultsForm").submit(function(event) {
      var errors = formValidator.numberOfInvalids();
      if (errors) {
        $('html,body').animate({
          scrollTop: $(formValidator.errorList[0].element).offset().top - 100
        }, 1000);
        event.preventDefault();
      }
    });
<?php
} ?>
  });

  $("#isExcluded").on("click", function(e) {
    lastValue = $(this).val();
  }).bind("change", function(e) {
    var changeConfirmation = confirm("Are you sure you want to change this ?");
    if (!changeConfirmation) {
      $(this).val(lastValue);
    }
  });

  $('#supervisorApproval').change(function () {
    if ($('#supervisorApproval').val() == 'yes') {
      $('#labSupervisor').show();
      $('#participantSupervisor').val('');
      $('#participantSupervisor').show();
    } else {
      $('#labSupervisor').hide();
      $('#participantSupervisor').val('');
      $('#participantSupervisor').hide();
    }
  });

  function save_form() {
    $('#submitAction').val('save');
  }

  function submit_form() {
    $('#submitAction').val('submit');
  }

  function validateNow(){
<?php
    if ($this->scheme == 'tb') { ?>
        if (!formValidator.valid()) {
          formValidator.showErrors();
        }
        return formValidator.valid();
<?php
    } else { ?>
    $.blockUI();
    var dates=[];
    $(".sampleTestDate").each(function() {
      if ($(this).val()) {
        dates.push(new Date($(this).val()));
      }
    });
    if (dates.length > 0) {
      var maxDate = new Date(Math.max.apply(null, dates));
      $("#testDate").val(moment(maxDate).format('DD-MMM-YYYY'));
    }
    if (moment($("#receipt_date").val()).isAfter($("#test_date").val())) {
      alert('Testing Date has to come after the Shipment Receipt Date');
      $.unblockUI();
      return false;
    }
    var flag = deforayValidator.init({
      formId: 'updateResultsForm'
    });
    if(!flag) {
      $.unblockUI();
    }
    return flag;
<?php
    } ?>
  }
</script>
